{"ast":null,"code":"import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromWebToken = init => () => {\n  const {\n    roleArn,\n    roleSessionName,\n    webIdentityToken,\n    providerId,\n    policyArns,\n    policy,\n    durationSeconds,\n    roleAssumerWithWebIdentity\n  } = init;\n  if (!roleAssumerWithWebIdentity) {\n    throw new CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` + ` but no role assumption callback was provided.`, false);\n  }\n  return roleAssumerWithWebIdentity({\n    RoleArn: roleArn,\n    RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n    WebIdentityToken: webIdentityToken,\n    ProviderId: providerId,\n    PolicyArns: policyArns,\n    Policy: policy,\n    DurationSeconds: durationSeconds\n  });\n};","map":{"version":3,"names":["CredentialsProviderError","fromWebToken","init","roleArn","roleSessionName","webIdentityToken","providerId","policyArns","policy","durationSeconds","roleAssumerWithWebIdentity","RoleArn","RoleSessionName","Date","now","WebIdentityToken","ProviderId","PolicyArns","Policy","DurationSeconds"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js"],"sourcesContent":["import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,4BAA4B;AACrE,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK,MAAM;EACxC,MAAM;IAAEC,OAAO;IAAEC,eAAe;IAAEC,gBAAgB;IAAEC,UAAU;IAAEC,UAAU;IAAEC,MAAM;IAAEC,eAAe;IAAEC;EAA4B,CAAC,GAAGR,IAAI;EACzI,IAAI,CAACQ,0BAA0B,EAAE;IAC7B,MAAM,IAAIV,wBAAwB,CAAE,aAAYG,OAAQ,0CAAyC,GAC5F,gDAA+C,EAAE,KAAK,CAAC;EAChE;EACA,OAAOO,0BAA0B,CAAC;IAC9BC,OAAO,EAAER,OAAO;IAChBS,eAAe,EAAER,eAAe,IAAK,sBAAqBS,IAAI,CAACC,GAAG,EAAG,EAAC;IACtEC,gBAAgB,EAAEV,gBAAgB;IAClCW,UAAU,EAAEV,UAAU;IACtBW,UAAU,EAAEV,UAAU;IACtBW,MAAM,EAAEV,MAAM;IACdW,eAAe,EAAEV;EACrB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}