{"ast":null,"code":"import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, throwDefaultError } from \"@aws-sdk/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"../models/CognitoIdentityServiceException\";\nimport { ConcurrentModificationException, DeveloperUserAlreadyRegisteredException, ExternalServiceException, InternalErrorException, InvalidIdentityPoolConfigurationException, InvalidParameterException, LimitExceededException, NotAuthorizedException, ResourceConflictException, ResourceNotFoundException, TooManyRequestsException } from \"../models/models_0\";\nexport const serializeAws_json1_1CreateIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.CreateIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1CreateIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentitiesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentities\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DeleteIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1DescribeIdentityPoolInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetCredentialsForIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetCredentialsForIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetCredentialsForIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetId\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetIdInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdentityPoolRolesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetIdentityPoolRoles\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdToken\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.GetPrincipalTagAttributeMap\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1GetPrincipalTagAttributeMapInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentitiesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentities\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1ListIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentityPoolsCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentityPools\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1ListIdentityPoolsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListTagsForResourceCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.ListTagsForResource\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1LookupDeveloperIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.LookupDeveloperIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1LookupDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1MergeDeveloperIdentitiesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.MergeDeveloperIdentities\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1MergeDeveloperIdentitiesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetIdentityPoolRolesCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.SetIdentityPoolRoles\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1SetIdentityPoolRolesInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.SetPrincipalTagAttributeMap\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1SetPrincipalTagAttributeMapInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1TagResourceCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.TagResource\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkDeveloperIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkDeveloperIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1UnlinkDeveloperIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkIdentityCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkIdentity\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1UnlinkIdentityInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UntagResourceCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UntagResource\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UpdateIdentityPoolCommand = async (input, context) => {\n  const headers = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSCognitoIdentityService.UpdateIdentityPool\"\n  };\n  let body;\n  body = JSON.stringify(serializeAws_json1_1IdentityPool(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const deserializeAws_json1_1CreateIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateIdentityPoolCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1CreateIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1DeleteIdentitiesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentitiesCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1DeleteIdentitiesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DeleteIdentitiesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1DeleteIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DeleteIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1DescribeIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityDescription(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DescribeIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1DescribeIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DescribeIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetCredentialsForIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetCredentialsForIdentityResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetCredentialsForIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidIdentityPoolConfigurationException\":\n    case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n      throw await deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetIdCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetIdResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetIdCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetIdentityPoolRolesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetIdentityPoolRolesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetIdentityPoolRolesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetOpenIdTokenCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetOpenIdTokenCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"DeveloperUserAlreadyRegisteredException\":\n    case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n      throw await deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1GetPrincipalTagAttributeMapResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1ListIdentitiesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentitiesCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1ListIdentitiesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListIdentitiesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1ListIdentityPoolsCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListIdentityPoolsCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1ListIdentityPoolsResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListIdentityPoolsCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1ListTagsForResourceCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsForResourceCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListTagsForResourceCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1LookupDeveloperIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1LookupDeveloperIdentityResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1LookupDeveloperIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1MergeDeveloperIdentitiesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1MergeDeveloperIdentitiesResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1MergeDeveloperIdentitiesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1SetIdentityPoolRolesCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1SetIdentityPoolRolesCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1SetPrincipalTagAttributeMapResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1TagResourceCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TagResourceCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1TagResourceResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1TagResourceCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1UnlinkDeveloperIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UnlinkDeveloperIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1UnlinkIdentityCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UnlinkIdentityCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UnlinkIdentityCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExternalServiceException\":\n    case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n      throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1UntagResourceCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UntagResourceCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1UntagResourceResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UntagResourceCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nexport const deserializeAws_json1_1UpdateIdentityPoolCommand = async (output, context) => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context);\n  }\n  const data = await parseBody(output.body, context);\n  let contents = {};\n  contents = deserializeAws_json1_1IdentityPool(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UpdateIdentityPoolCommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n      throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n    case \"InternalErrorException\":\n    case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n      throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n      throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n    case \"LimitExceededException\":\n    case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n      throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n    case \"NotAuthorizedException\":\n    case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n      throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n    case \"ResourceConflictException\":\n    case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n      throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n      throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n      throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode\n      });\n  }\n};\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);\n  const exception = new ConcurrentModificationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1DeveloperUserAlreadyRegisteredException(body, context);\n  const exception = new DeveloperUserAlreadyRegisteredException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ExternalServiceExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ExternalServiceException(body, context);\n  const exception = new ExternalServiceException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InternalErrorExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1InternalErrorException(body, context);\n  const exception = new InternalErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1InvalidIdentityPoolConfigurationException(body, context);\n  const exception = new InvalidIdentityPoolConfigurationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1InvalidParameterException(body, context);\n  const exception = new InvalidParameterException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n  const exception = new LimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1NotAuthorizedExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1NotAuthorizedException(body, context);\n  const exception = new NotAuthorizedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ResourceConflictExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ResourceConflictException(body, context);\n  const exception = new ResourceConflictException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const exception = new ResourceNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);\n  const exception = new TooManyRequestsException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return __decorateServiceException(exception, body);\n};\nconst serializeAws_json1_1CognitoIdentityProvider = (input, context) => {\n  return {\n    ...(input.ClientId != null && {\n      ClientId: input.ClientId\n    }),\n    ...(input.ProviderName != null && {\n      ProviderName: input.ProviderName\n    }),\n    ...(input.ServerSideTokenCheck != null && {\n      ServerSideTokenCheck: input.ServerSideTokenCheck\n    })\n  };\n};\nconst serializeAws_json1_1CognitoIdentityProviderList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return serializeAws_json1_1CognitoIdentityProvider(entry, context);\n  });\n};\nconst serializeAws_json1_1CreateIdentityPoolInput = (input, context) => {\n  return {\n    ...(input.AllowClassicFlow != null && {\n      AllowClassicFlow: input.AllowClassicFlow\n    }),\n    ...(input.AllowUnauthenticatedIdentities != null && {\n      AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities\n    }),\n    ...(input.CognitoIdentityProviders != null && {\n      CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context)\n    }),\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.IdentityPoolName != null && {\n      IdentityPoolName: input.IdentityPoolName\n    }),\n    ...(input.IdentityPoolTags != null && {\n      IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context)\n    }),\n    ...(input.OpenIdConnectProviderARNs != null && {\n      OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context)\n    }),\n    ...(input.SamlProviderARNs != null && {\n      SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context)\n    }),\n    ...(input.SupportedLoginProviders != null && {\n      SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context)\n    })\n  };\n};\nconst serializeAws_json1_1DeleteIdentitiesInput = (input, context) => {\n  return {\n    ...(input.IdentityIdsToDelete != null && {\n      IdentityIdsToDelete: serializeAws_json1_1IdentityIdList(input.IdentityIdsToDelete, context)\n    })\n  };\n};\nconst serializeAws_json1_1DeleteIdentityPoolInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\nconst serializeAws_json1_1DescribeIdentityInput = (input, context) => {\n  return {\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    })\n  };\n};\nconst serializeAws_json1_1DescribeIdentityPoolInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\nconst serializeAws_json1_1GetCredentialsForIdentityInput = (input, context) => {\n  return {\n    ...(input.CustomRoleArn != null && {\n      CustomRoleArn: input.CustomRoleArn\n    }),\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    })\n  };\n};\nconst serializeAws_json1_1GetIdentityPoolRolesInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\nconst serializeAws_json1_1GetIdInput = (input, context) => {\n  return {\n    ...(input.AccountId != null && {\n      AccountId: input.AccountId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    })\n  };\n};\nconst serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput = (input, context) => {\n  return {\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    }),\n    ...(input.PrincipalTags != null && {\n      PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context)\n    }),\n    ...(input.TokenDuration != null && {\n      TokenDuration: input.TokenDuration\n    })\n  };\n};\nconst serializeAws_json1_1GetOpenIdTokenInput = (input, context) => {\n  return {\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    })\n  };\n};\nconst serializeAws_json1_1GetPrincipalTagAttributeMapInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.IdentityProviderName != null && {\n      IdentityProviderName: input.IdentityProviderName\n    })\n  };\n};\nconst serializeAws_json1_1IdentityIdList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1IdentityPool = (input, context) => {\n  return {\n    ...(input.AllowClassicFlow != null && {\n      AllowClassicFlow: input.AllowClassicFlow\n    }),\n    ...(input.AllowUnauthenticatedIdentities != null && {\n      AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities\n    }),\n    ...(input.CognitoIdentityProviders != null && {\n      CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context)\n    }),\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.IdentityPoolName != null && {\n      IdentityPoolName: input.IdentityPoolName\n    }),\n    ...(input.IdentityPoolTags != null && {\n      IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context)\n    }),\n    ...(input.OpenIdConnectProviderARNs != null && {\n      OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context)\n    }),\n    ...(input.SamlProviderARNs != null && {\n      SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context)\n    }),\n    ...(input.SupportedLoginProviders != null && {\n      SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context)\n    })\n  };\n};\nconst serializeAws_json1_1IdentityPoolTagsListType = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1IdentityPoolTagsType = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref) => {\n    let [key, value] = _ref;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1IdentityProviders = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref2) => {\n    let [key, value] = _ref2;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1ListIdentitiesInput = (input, context) => {\n  return {\n    ...(input.HideDisabled != null && {\n      HideDisabled: input.HideDisabled\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.MaxResults != null && {\n      MaxResults: input.MaxResults\n    }),\n    ...(input.NextToken != null && {\n      NextToken: input.NextToken\n    })\n  };\n};\nconst serializeAws_json1_1ListIdentityPoolsInput = (input, context) => {\n  return {\n    ...(input.MaxResults != null && {\n      MaxResults: input.MaxResults\n    }),\n    ...(input.NextToken != null && {\n      NextToken: input.NextToken\n    })\n  };\n};\nconst serializeAws_json1_1ListTagsForResourceInput = (input, context) => {\n  return {\n    ...(input.ResourceArn != null && {\n      ResourceArn: input.ResourceArn\n    })\n  };\n};\nconst serializeAws_json1_1LoginsList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1LoginsMap = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref3) => {\n    let [key, value] = _ref3;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1LookupDeveloperIdentityInput = (input, context) => {\n  return {\n    ...(input.DeveloperUserIdentifier != null && {\n      DeveloperUserIdentifier: input.DeveloperUserIdentifier\n    }),\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.MaxResults != null && {\n      MaxResults: input.MaxResults\n    }),\n    ...(input.NextToken != null && {\n      NextToken: input.NextToken\n    })\n  };\n};\nconst serializeAws_json1_1MappingRule = (input, context) => {\n  return {\n    ...(input.Claim != null && {\n      Claim: input.Claim\n    }),\n    ...(input.MatchType != null && {\n      MatchType: input.MatchType\n    }),\n    ...(input.RoleARN != null && {\n      RoleARN: input.RoleARN\n    }),\n    ...(input.Value != null && {\n      Value: input.Value\n    })\n  };\n};\nconst serializeAws_json1_1MappingRulesList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return serializeAws_json1_1MappingRule(entry, context);\n  });\n};\nconst serializeAws_json1_1MergeDeveloperIdentitiesInput = (input, context) => {\n  return {\n    ...(input.DestinationUserIdentifier != null && {\n      DestinationUserIdentifier: input.DestinationUserIdentifier\n    }),\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.SourceUserIdentifier != null && {\n      SourceUserIdentifier: input.SourceUserIdentifier\n    })\n  };\n};\nconst serializeAws_json1_1OIDCProviderList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1PrincipalTags = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref4) => {\n    let [key, value] = _ref4;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1RoleMapping = (input, context) => {\n  return {\n    ...(input.AmbiguousRoleResolution != null && {\n      AmbiguousRoleResolution: input.AmbiguousRoleResolution\n    }),\n    ...(input.RulesConfiguration != null && {\n      RulesConfiguration: serializeAws_json1_1RulesConfigurationType(input.RulesConfiguration, context)\n    }),\n    ...(input.Type != null && {\n      Type: input.Type\n    })\n  };\n};\nconst serializeAws_json1_1RoleMappingMap = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref5) => {\n    let [key, value] = _ref5;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = serializeAws_json1_1RoleMapping(value, context);\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1RolesMap = (input, context) => {\n  return Object.entries(input).reduce((acc, _ref6) => {\n    let [key, value] = _ref6;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n};\nconst serializeAws_json1_1RulesConfigurationType = (input, context) => {\n  return {\n    ...(input.Rules != null && {\n      Rules: serializeAws_json1_1MappingRulesList(input.Rules, context)\n    })\n  };\n};\nconst serializeAws_json1_1SAMLProviderList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return entry;\n  });\n};\nconst serializeAws_json1_1SetIdentityPoolRolesInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.RoleMappings != null && {\n      RoleMappings: serializeAws_json1_1RoleMappingMap(input.RoleMappings, context)\n    }),\n    ...(input.Roles != null && {\n      Roles: serializeAws_json1_1RolesMap(input.Roles, context)\n    })\n  };\n};\nconst serializeAws_json1_1SetPrincipalTagAttributeMapInput = (input, context) => {\n  return {\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    }),\n    ...(input.IdentityProviderName != null && {\n      IdentityProviderName: input.IdentityProviderName\n    }),\n    ...(input.PrincipalTags != null && {\n      PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context)\n    }),\n    ...(input.UseDefaults != null && {\n      UseDefaults: input.UseDefaults\n    })\n  };\n};\nconst serializeAws_json1_1TagResourceInput = (input, context) => {\n  return {\n    ...(input.ResourceArn != null && {\n      ResourceArn: input.ResourceArn\n    }),\n    ...(input.Tags != null && {\n      Tags: serializeAws_json1_1IdentityPoolTagsType(input.Tags, context)\n    })\n  };\n};\nconst serializeAws_json1_1UnlinkDeveloperIdentityInput = (input, context) => {\n  return {\n    ...(input.DeveloperProviderName != null && {\n      DeveloperProviderName: input.DeveloperProviderName\n    }),\n    ...(input.DeveloperUserIdentifier != null && {\n      DeveloperUserIdentifier: input.DeveloperUserIdentifier\n    }),\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.IdentityPoolId != null && {\n      IdentityPoolId: input.IdentityPoolId\n    })\n  };\n};\nconst serializeAws_json1_1UnlinkIdentityInput = (input, context) => {\n  return {\n    ...(input.IdentityId != null && {\n      IdentityId: input.IdentityId\n    }),\n    ...(input.Logins != null && {\n      Logins: serializeAws_json1_1LoginsMap(input.Logins, context)\n    }),\n    ...(input.LoginsToRemove != null && {\n      LoginsToRemove: serializeAws_json1_1LoginsList(input.LoginsToRemove, context)\n    })\n  };\n};\nconst serializeAws_json1_1UntagResourceInput = (input, context) => {\n  return {\n    ...(input.ResourceArn != null && {\n      ResourceArn: input.ResourceArn\n    }),\n    ...(input.TagKeys != null && {\n      TagKeys: serializeAws_json1_1IdentityPoolTagsListType(input.TagKeys, context)\n    })\n  };\n};\nconst deserializeAws_json1_1CognitoIdentityProvider = (output, context) => {\n  return {\n    ClientId: __expectString(output.ClientId),\n    ProviderName: __expectString(output.ProviderName),\n    ServerSideTokenCheck: __expectBoolean(output.ServerSideTokenCheck)\n  };\n};\nconst deserializeAws_json1_1CognitoIdentityProviderList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1CognitoIdentityProvider(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1ConcurrentModificationException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1Credentials = (output, context) => {\n  return {\n    AccessKeyId: __expectString(output.AccessKeyId),\n    Expiration: output.Expiration != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.Expiration))) : undefined,\n    SecretKey: __expectString(output.SecretKey),\n    SessionToken: __expectString(output.SessionToken)\n  };\n};\nconst deserializeAws_json1_1DeleteIdentitiesResponse = (output, context) => {\n  return {\n    UnprocessedIdentityIds: output.UnprocessedIdentityIds != null ? deserializeAws_json1_1UnprocessedIdentityIdList(output.UnprocessedIdentityIds, context) : undefined\n  };\n};\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1DeveloperUserIdentifierList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return __expectString(entry);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1ExternalServiceException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1GetCredentialsForIdentityResponse = (output, context) => {\n  return {\n    Credentials: output.Credentials != null ? deserializeAws_json1_1Credentials(output.Credentials, context) : undefined,\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\nconst deserializeAws_json1_1GetIdentityPoolRolesResponse = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    RoleMappings: output.RoleMappings != null ? deserializeAws_json1_1RoleMappingMap(output.RoleMappings, context) : undefined,\n    Roles: output.Roles != null ? deserializeAws_json1_1RolesMap(output.Roles, context) : undefined\n  };\n};\nconst deserializeAws_json1_1GetIdResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId),\n    Token: __expectString(output.Token)\n  };\n};\nconst deserializeAws_json1_1GetOpenIdTokenResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId),\n    Token: __expectString(output.Token)\n  };\n};\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapResponse = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityProviderName: __expectString(output.IdentityProviderName),\n    PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n    UseDefaults: __expectBoolean(output.UseDefaults)\n  };\n};\nconst deserializeAws_json1_1IdentitiesList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1IdentityDescription(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1IdentityDescription = (output, context) => {\n  return {\n    CreationDate: output.CreationDate != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationDate))) : undefined,\n    IdentityId: __expectString(output.IdentityId),\n    LastModifiedDate: output.LastModifiedDate != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedDate))) : undefined,\n    Logins: output.Logins != null ? deserializeAws_json1_1LoginsList(output.Logins, context) : undefined\n  };\n};\nconst deserializeAws_json1_1IdentityPool = (output, context) => {\n  return {\n    AllowClassicFlow: __expectBoolean(output.AllowClassicFlow),\n    AllowUnauthenticatedIdentities: __expectBoolean(output.AllowUnauthenticatedIdentities),\n    CognitoIdentityProviders: output.CognitoIdentityProviders != null ? deserializeAws_json1_1CognitoIdentityProviderList(output.CognitoIdentityProviders, context) : undefined,\n    DeveloperProviderName: __expectString(output.DeveloperProviderName),\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityPoolName: __expectString(output.IdentityPoolName),\n    IdentityPoolTags: output.IdentityPoolTags != null ? deserializeAws_json1_1IdentityPoolTagsType(output.IdentityPoolTags, context) : undefined,\n    OpenIdConnectProviderARNs: output.OpenIdConnectProviderARNs != null ? deserializeAws_json1_1OIDCProviderList(output.OpenIdConnectProviderARNs, context) : undefined,\n    SamlProviderARNs: output.SamlProviderARNs != null ? deserializeAws_json1_1SAMLProviderList(output.SamlProviderARNs, context) : undefined,\n    SupportedLoginProviders: output.SupportedLoginProviders != null ? deserializeAws_json1_1IdentityProviders(output.SupportedLoginProviders, context) : undefined\n  };\n};\nconst deserializeAws_json1_1IdentityPoolShortDescription = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityPoolName: __expectString(output.IdentityPoolName)\n  };\n};\nconst deserializeAws_json1_1IdentityPoolsList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1IdentityPoolShortDescription(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1IdentityPoolTagsType = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref7) => {\n    let [key, value] = _ref7;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1IdentityProviders = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref8) => {\n    let [key, value] = _ref8;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1InternalErrorException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1InvalidParameterException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1LimitExceededException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1ListIdentitiesResponse = (output, context) => {\n  return {\n    Identities: output.Identities != null ? deserializeAws_json1_1IdentitiesList(output.Identities, context) : undefined,\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    NextToken: __expectString(output.NextToken)\n  };\n};\nconst deserializeAws_json1_1ListIdentityPoolsResponse = (output, context) => {\n  return {\n    IdentityPools: output.IdentityPools != null ? deserializeAws_json1_1IdentityPoolsList(output.IdentityPools, context) : undefined,\n    NextToken: __expectString(output.NextToken)\n  };\n};\nconst deserializeAws_json1_1ListTagsForResourceResponse = (output, context) => {\n  return {\n    Tags: output.Tags != null ? deserializeAws_json1_1IdentityPoolTagsType(output.Tags, context) : undefined\n  };\n};\nconst deserializeAws_json1_1LoginsList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return __expectString(entry);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1LookupDeveloperIdentityResponse = (output, context) => {\n  return {\n    DeveloperUserIdentifierList: output.DeveloperUserIdentifierList != null ? deserializeAws_json1_1DeveloperUserIdentifierList(output.DeveloperUserIdentifierList, context) : undefined,\n    IdentityId: __expectString(output.IdentityId),\n    NextToken: __expectString(output.NextToken)\n  };\n};\nconst deserializeAws_json1_1MappingRule = (output, context) => {\n  return {\n    Claim: __expectString(output.Claim),\n    MatchType: __expectString(output.MatchType),\n    RoleARN: __expectString(output.RoleARN),\n    Value: __expectString(output.Value)\n  };\n};\nconst deserializeAws_json1_1MappingRulesList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1MappingRule(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1MergeDeveloperIdentitiesResponse = (output, context) => {\n  return {\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\nconst deserializeAws_json1_1NotAuthorizedException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1OIDCProviderList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return __expectString(entry);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1PrincipalTags = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref9) => {\n    let [key, value] = _ref9;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1ResourceConflictException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1ResourceNotFoundException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1RoleMapping = (output, context) => {\n  return {\n    AmbiguousRoleResolution: __expectString(output.AmbiguousRoleResolution),\n    RulesConfiguration: output.RulesConfiguration != null ? deserializeAws_json1_1RulesConfigurationType(output.RulesConfiguration, context) : undefined,\n    Type: __expectString(output.Type)\n  };\n};\nconst deserializeAws_json1_1RoleMappingMap = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref10) => {\n    let [key, value] = _ref10;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = deserializeAws_json1_1RoleMapping(value, context);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1RolesMap = (output, context) => {\n  return Object.entries(output).reduce((acc, _ref11) => {\n    let [key, value] = _ref11;\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = __expectString(value);\n    return acc;\n  }, {});\n};\nconst deserializeAws_json1_1RulesConfigurationType = (output, context) => {\n  return {\n    Rules: output.Rules != null ? deserializeAws_json1_1MappingRulesList(output.Rules, context) : undefined\n  };\n};\nconst deserializeAws_json1_1SAMLProviderList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return __expectString(entry);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapResponse = (output, context) => {\n  return {\n    IdentityPoolId: __expectString(output.IdentityPoolId),\n    IdentityProviderName: __expectString(output.IdentityProviderName),\n    PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n    UseDefaults: __expectBoolean(output.UseDefaults)\n  };\n};\nconst deserializeAws_json1_1TagResourceResponse = (output, context) => {\n  return {};\n};\nconst deserializeAws_json1_1TooManyRequestsException = (output, context) => {\n  return {\n    message: __expectString(output.message)\n  };\n};\nconst deserializeAws_json1_1UnprocessedIdentityId = (output, context) => {\n  return {\n    ErrorCode: __expectString(output.ErrorCode),\n    IdentityId: __expectString(output.IdentityId)\n  };\n};\nconst deserializeAws_json1_1UnprocessedIdentityIdList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1UnprocessedIdentityId(entry, context);\n  });\n  return retVal;\n};\nconst deserializeAws_json1_1UntagResourceResponse = (output, context) => {\n  return {};\n};\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});\nconst collectBody = function () {\n  let streamBody = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array();\n  let context = arguments.length > 1 ? arguments[1] : undefined;\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then(body => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n  const {\n    hostname,\n    protocol = \"https\",\n    port,\n    path: basePath\n  } = await context.endpoint();\n  const contents = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n    headers\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then(encoded => {\n  if (encoded.length) {\n    return JSON.parse(encoded);\n  }\n  return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n  const value = await parseBody(errorBody, context);\n  value.message = value.message ?? value.Message;\n  return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n  const findKey = (object, key) => Object.keys(object).find(k => k.toLowerCase() === key.toLowerCase());\n  const sanitizeErrorCode = rawValue => {\n    let cleanValue = rawValue;\n    if (typeof cleanValue === \"number\") {\n      cleanValue = cleanValue.toString();\n    }\n    if (cleanValue.indexOf(\",\") >= 0) {\n      cleanValue = cleanValue.split(\",\")[0];\n    }\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n};","map":{"version":3,"names":["HttpRequest","__HttpRequest","decorateServiceException","__decorateServiceException","expectBoolean","__expectBoolean","expectNonNull","__expectNonNull","expectNumber","__expectNumber","expectString","__expectString","parseEpochTimestamp","__parseEpochTimestamp","throwDefaultError","CognitoIdentityServiceException","__BaseException","ConcurrentModificationException","DeveloperUserAlreadyRegisteredException","ExternalServiceException","InternalErrorException","InvalidIdentityPoolConfigurationException","InvalidParameterException","LimitExceededException","NotAuthorizedException","ResourceConflictException","ResourceNotFoundException","TooManyRequestsException","serializeAws_json1_1CreateIdentityPoolCommand","input","context","headers","body","JSON","stringify","serializeAws_json1_1CreateIdentityPoolInput","buildHttpRpcRequest","undefined","serializeAws_json1_1DeleteIdentitiesCommand","serializeAws_json1_1DeleteIdentitiesInput","serializeAws_json1_1DeleteIdentityPoolCommand","serializeAws_json1_1DeleteIdentityPoolInput","serializeAws_json1_1DescribeIdentityCommand","serializeAws_json1_1DescribeIdentityInput","serializeAws_json1_1DescribeIdentityPoolCommand","serializeAws_json1_1DescribeIdentityPoolInput","serializeAws_json1_1GetCredentialsForIdentityCommand","serializeAws_json1_1GetCredentialsForIdentityInput","serializeAws_json1_1GetIdCommand","serializeAws_json1_1GetIdInput","serializeAws_json1_1GetIdentityPoolRolesCommand","serializeAws_json1_1GetIdentityPoolRolesInput","serializeAws_json1_1GetOpenIdTokenCommand","serializeAws_json1_1GetOpenIdTokenInput","serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand","serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput","serializeAws_json1_1GetPrincipalTagAttributeMapCommand","serializeAws_json1_1GetPrincipalTagAttributeMapInput","serializeAws_json1_1ListIdentitiesCommand","serializeAws_json1_1ListIdentitiesInput","serializeAws_json1_1ListIdentityPoolsCommand","serializeAws_json1_1ListIdentityPoolsInput","serializeAws_json1_1ListTagsForResourceCommand","serializeAws_json1_1ListTagsForResourceInput","serializeAws_json1_1LookupDeveloperIdentityCommand","serializeAws_json1_1LookupDeveloperIdentityInput","serializeAws_json1_1MergeDeveloperIdentitiesCommand","serializeAws_json1_1MergeDeveloperIdentitiesInput","serializeAws_json1_1SetIdentityPoolRolesCommand","serializeAws_json1_1SetIdentityPoolRolesInput","serializeAws_json1_1SetPrincipalTagAttributeMapCommand","serializeAws_json1_1SetPrincipalTagAttributeMapInput","serializeAws_json1_1TagResourceCommand","serializeAws_json1_1TagResourceInput","serializeAws_json1_1UnlinkDeveloperIdentityCommand","serializeAws_json1_1UnlinkDeveloperIdentityInput","serializeAws_json1_1UnlinkIdentityCommand","serializeAws_json1_1UnlinkIdentityInput","serializeAws_json1_1UntagResourceCommand","serializeAws_json1_1UntagResourceInput","serializeAws_json1_1UpdateIdentityPoolCommand","serializeAws_json1_1IdentityPool","deserializeAws_json1_1CreateIdentityPoolCommand","output","statusCode","deserializeAws_json1_1CreateIdentityPoolCommandError","data","parseBody","contents","deserializeAws_json1_1IdentityPool","response","$metadata","deserializeMetadata","Promise","resolve","parsedOutput","parseErrorBody","errorCode","loadRestJsonErrorCode","deserializeAws_json1_1InternalErrorExceptionResponse","deserializeAws_json1_1InvalidParameterExceptionResponse","deserializeAws_json1_1LimitExceededExceptionResponse","deserializeAws_json1_1NotAuthorizedExceptionResponse","deserializeAws_json1_1ResourceConflictExceptionResponse","deserializeAws_json1_1TooManyRequestsExceptionResponse","parsedBody","exceptionCtor","deserializeAws_json1_1DeleteIdentitiesCommand","deserializeAws_json1_1DeleteIdentitiesCommandError","deserializeAws_json1_1DeleteIdentitiesResponse","deserializeAws_json1_1DeleteIdentityPoolCommand","deserializeAws_json1_1DeleteIdentityPoolCommandError","collectBody","deserializeAws_json1_1ResourceNotFoundExceptionResponse","deserializeAws_json1_1DescribeIdentityCommand","deserializeAws_json1_1DescribeIdentityCommandError","deserializeAws_json1_1IdentityDescription","deserializeAws_json1_1DescribeIdentityPoolCommand","deserializeAws_json1_1DescribeIdentityPoolCommandError","deserializeAws_json1_1GetCredentialsForIdentityCommand","deserializeAws_json1_1GetCredentialsForIdentityCommandError","deserializeAws_json1_1GetCredentialsForIdentityResponse","deserializeAws_json1_1ExternalServiceExceptionResponse","deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse","deserializeAws_json1_1GetIdCommand","deserializeAws_json1_1GetIdCommandError","deserializeAws_json1_1GetIdResponse","deserializeAws_json1_1GetIdentityPoolRolesCommand","deserializeAws_json1_1GetIdentityPoolRolesCommandError","deserializeAws_json1_1GetIdentityPoolRolesResponse","deserializeAws_json1_1GetOpenIdTokenCommand","deserializeAws_json1_1GetOpenIdTokenCommandError","deserializeAws_json1_1GetOpenIdTokenResponse","deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand","deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError","deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse","deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse","deserializeAws_json1_1GetPrincipalTagAttributeMapCommand","deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError","deserializeAws_json1_1GetPrincipalTagAttributeMapResponse","deserializeAws_json1_1ListIdentitiesCommand","deserializeAws_json1_1ListIdentitiesCommandError","deserializeAws_json1_1ListIdentitiesResponse","deserializeAws_json1_1ListIdentityPoolsCommand","deserializeAws_json1_1ListIdentityPoolsCommandError","deserializeAws_json1_1ListIdentityPoolsResponse","deserializeAws_json1_1ListTagsForResourceCommand","deserializeAws_json1_1ListTagsForResourceCommandError","deserializeAws_json1_1ListTagsForResourceResponse","deserializeAws_json1_1LookupDeveloperIdentityCommand","deserializeAws_json1_1LookupDeveloperIdentityCommandError","deserializeAws_json1_1LookupDeveloperIdentityResponse","deserializeAws_json1_1MergeDeveloperIdentitiesCommand","deserializeAws_json1_1MergeDeveloperIdentitiesCommandError","deserializeAws_json1_1MergeDeveloperIdentitiesResponse","deserializeAws_json1_1SetIdentityPoolRolesCommand","deserializeAws_json1_1SetIdentityPoolRolesCommandError","deserializeAws_json1_1ConcurrentModificationExceptionResponse","deserializeAws_json1_1SetPrincipalTagAttributeMapCommand","deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError","deserializeAws_json1_1SetPrincipalTagAttributeMapResponse","deserializeAws_json1_1TagResourceCommand","deserializeAws_json1_1TagResourceCommandError","deserializeAws_json1_1TagResourceResponse","deserializeAws_json1_1UnlinkDeveloperIdentityCommand","deserializeAws_json1_1UnlinkDeveloperIdentityCommandError","deserializeAws_json1_1UnlinkIdentityCommand","deserializeAws_json1_1UnlinkIdentityCommandError","deserializeAws_json1_1UntagResourceCommand","deserializeAws_json1_1UntagResourceCommandError","deserializeAws_json1_1UntagResourceResponse","deserializeAws_json1_1UpdateIdentityPoolCommand","deserializeAws_json1_1UpdateIdentityPoolCommandError","deserialized","deserializeAws_json1_1ConcurrentModificationException","exception","deserializeAws_json1_1DeveloperUserAlreadyRegisteredException","deserializeAws_json1_1ExternalServiceException","deserializeAws_json1_1InternalErrorException","deserializeAws_json1_1InvalidIdentityPoolConfigurationException","deserializeAws_json1_1InvalidParameterException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1NotAuthorizedException","deserializeAws_json1_1ResourceConflictException","deserializeAws_json1_1ResourceNotFoundException","deserializeAws_json1_1TooManyRequestsException","serializeAws_json1_1CognitoIdentityProvider","ClientId","ProviderName","ServerSideTokenCheck","serializeAws_json1_1CognitoIdentityProviderList","filter","e","map","entry","AllowClassicFlow","AllowUnauthenticatedIdentities","CognitoIdentityProviders","DeveloperProviderName","IdentityPoolName","IdentityPoolTags","serializeAws_json1_1IdentityPoolTagsType","OpenIdConnectProviderARNs","serializeAws_json1_1OIDCProviderList","SamlProviderARNs","serializeAws_json1_1SAMLProviderList","SupportedLoginProviders","serializeAws_json1_1IdentityProviders","IdentityIdsToDelete","serializeAws_json1_1IdentityIdList","IdentityPoolId","IdentityId","CustomRoleArn","Logins","serializeAws_json1_1LoginsMap","AccountId","PrincipalTags","serializeAws_json1_1PrincipalTags","TokenDuration","IdentityProviderName","serializeAws_json1_1IdentityPoolTagsListType","Object","entries","reduce","acc","key","value","HideDisabled","MaxResults","NextToken","ResourceArn","serializeAws_json1_1LoginsList","DeveloperUserIdentifier","serializeAws_json1_1MappingRule","Claim","MatchType","RoleARN","Value","serializeAws_json1_1MappingRulesList","DestinationUserIdentifier","SourceUserIdentifier","serializeAws_json1_1RoleMapping","AmbiguousRoleResolution","RulesConfiguration","serializeAws_json1_1RulesConfigurationType","Type","serializeAws_json1_1RoleMappingMap","serializeAws_json1_1RolesMap","Rules","RoleMappings","Roles","UseDefaults","Tags","LoginsToRemove","TagKeys","deserializeAws_json1_1CognitoIdentityProvider","deserializeAws_json1_1CognitoIdentityProviderList","retVal","message","deserializeAws_json1_1Credentials","AccessKeyId","Expiration","SecretKey","SessionToken","UnprocessedIdentityIds","deserializeAws_json1_1UnprocessedIdentityIdList","deserializeAws_json1_1DeveloperUserIdentifierList","Credentials","deserializeAws_json1_1RoleMappingMap","deserializeAws_json1_1RolesMap","Token","deserializeAws_json1_1PrincipalTags","deserializeAws_json1_1IdentitiesList","CreationDate","LastModifiedDate","deserializeAws_json1_1LoginsList","deserializeAws_json1_1IdentityPoolTagsType","deserializeAws_json1_1OIDCProviderList","deserializeAws_json1_1SAMLProviderList","deserializeAws_json1_1IdentityProviders","deserializeAws_json1_1IdentityPoolShortDescription","deserializeAws_json1_1IdentityPoolsList","Identities","IdentityPools","DeveloperUserIdentifierList","deserializeAws_json1_1MappingRule","deserializeAws_json1_1MappingRulesList","deserializeAws_json1_1RoleMapping","deserializeAws_json1_1RulesConfigurationType","deserializeAws_json1_1UnprocessedIdentityId","ErrorCode","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","hostname","protocol","port","basePath","endpoint","method","endsWith","slice","encoded","length","parse","errorBody","Message","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","toString","indexOf","split","headerKey","code"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/client-cognito-identity/dist-es/protocols/Aws_json1_1.js"],"sourcesContent":["import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, parseEpochTimestamp as __parseEpochTimestamp, throwDefaultError, } from \"@aws-sdk/smithy-client\";\nimport { CognitoIdentityServiceException as __BaseException } from \"../models/CognitoIdentityServiceException\";\nimport { ConcurrentModificationException, DeveloperUserAlreadyRegisteredException, ExternalServiceException, InternalErrorException, InvalidIdentityPoolConfigurationException, InvalidParameterException, LimitExceededException, NotAuthorizedException, ResourceConflictException, ResourceNotFoundException, TooManyRequestsException, } from \"../models/models_0\";\nexport const serializeAws_json1_1CreateIdentityPoolCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.CreateIdentityPool\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1CreateIdentityPoolInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentitiesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentities\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteIdentitiesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DeleteIdentityPoolCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.DeleteIdentityPool\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DeleteIdentityPoolInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1DescribeIdentityPoolCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.DescribeIdentityPool\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1DescribeIdentityPoolInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetCredentialsForIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetCredentialsForIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetCredentialsForIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetId\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetIdInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetIdentityPoolRoles\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetIdentityPoolRolesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdToken\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.GetPrincipalTagAttributeMap\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1GetPrincipalTagAttributeMapInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentitiesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentities\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListIdentitiesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListIdentityPoolsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.ListIdentityPools\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListIdentityPoolsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1ListTagsForResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.ListTagsForResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1ListTagsForResourceInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1LookupDeveloperIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.LookupDeveloperIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1LookupDeveloperIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1MergeDeveloperIdentitiesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.MergeDeveloperIdentities\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1MergeDeveloperIdentitiesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetIdentityPoolRolesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.SetIdentityPoolRoles\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1SetIdentityPoolRolesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.SetPrincipalTagAttributeMap\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1SetPrincipalTagAttributeMapInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1TagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.TagResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1TagResourceInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkDeveloperIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkDeveloperIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UnlinkDeveloperIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UnlinkIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.UnlinkIdentity\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UnlinkIdentityInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UntagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.UntagResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1UntagResourceInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_1UpdateIdentityPoolCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSCognitoIdentityService.UpdateIdentityPool\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_1IdentityPool(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const deserializeAws_json1_1CreateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1CreateIdentityPoolCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1IdentityPool(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1CreateIdentityPoolCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n            throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1DeleteIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteIdentitiesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1DeleteIdentitiesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DeleteIdentitiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1DeleteIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DeleteIdentityPoolCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DeleteIdentityPoolCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1DescribeIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1IdentityDescription(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DescribeIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1DescribeIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1DescribeIdentityPoolCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1IdentityPool(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1DescribeIdentityPoolCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetCredentialsForIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetCredentialsForIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetCredentialsForIdentityResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetCredentialsForIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidIdentityPoolConfigurationException\":\n        case \"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException\":\n            throw await deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetIdCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetIdCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetIdResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n            throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetIdentityPoolRolesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetIdentityPoolRolesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetIdentityPoolRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetOpenIdTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetOpenIdTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetOpenIdTokenResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetOpenIdTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DeveloperUserAlreadyRegisteredException\":\n        case \"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException\":\n            throw await deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1GetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1GetPrincipalTagAttributeMapResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1ListIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListIdentitiesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListIdentitiesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListIdentitiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1ListIdentityPoolsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListIdentityPoolsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListIdentityPoolsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListIdentityPoolsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1ListTagsForResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1ListTagsForResourceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1ListTagsForResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1LookupDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1LookupDeveloperIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1LookupDeveloperIdentityResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1LookupDeveloperIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1MergeDeveloperIdentitiesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1MergeDeveloperIdentitiesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1MergeDeveloperIdentitiesResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1MergeDeveloperIdentitiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1SetIdentityPoolRolesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1SetIdentityPoolRolesCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1SetIdentityPoolRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConcurrentModificationException\":\n        case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n            throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1SetPrincipalTagAttributeMapCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1SetPrincipalTagAttributeMapResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1TagResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1TagResourceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1TagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1UnlinkDeveloperIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UnlinkDeveloperIdentityCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UnlinkDeveloperIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1UnlinkIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UnlinkIdentityCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UnlinkIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExternalServiceException\":\n        case \"com.amazonaws.cognitoidentity#ExternalServiceException\":\n            throw await deserializeAws_json1_1ExternalServiceExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UntagResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1UntagResourceResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_1UpdateIdentityPoolCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_1UpdateIdentityPoolCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_1IdentityPool(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_1UpdateIdentityPoolCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConcurrentModificationException\":\n        case \"com.amazonaws.cognitoidentity#ConcurrentModificationException\":\n            throw await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context);\n        case \"InternalErrorException\":\n        case \"com.amazonaws.cognitoidentity#InternalErrorException\":\n            throw await deserializeAws_json1_1InternalErrorExceptionResponse(parsedOutput, context);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.cognitoidentity#InvalidParameterException\":\n            throw await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cognitoidentity#LimitExceededException\":\n            throw await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context);\n        case \"NotAuthorizedException\":\n        case \"com.amazonaws.cognitoidentity#NotAuthorizedException\":\n            throw await deserializeAws_json1_1NotAuthorizedExceptionResponse(parsedOutput, context);\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.cognitoidentity#ResourceConflictException\":\n            throw await deserializeAws_json1_1ResourceConflictExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cognitoidentity#ResourceNotFoundException\":\n            throw await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.cognitoidentity#TooManyRequestsException\":\n            throw await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);\n    const exception = new ConcurrentModificationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1DeveloperUserAlreadyRegisteredException(body, context);\n    const exception = new DeveloperUserAlreadyRegisteredException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ExternalServiceExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ExternalServiceException(body, context);\n    const exception = new ExternalServiceException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InternalErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1InternalErrorException(body, context);\n    const exception = new InternalErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1InvalidIdentityPoolConfigurationException(body, context);\n    const exception = new InvalidIdentityPoolConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1InvalidParameterException(body, context);\n    const exception = new InvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1NotAuthorizedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1NotAuthorizedException(body, context);\n    const exception = new NotAuthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ResourceConflictExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ResourceConflictException(body, context);\n    const exception = new ResourceConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst serializeAws_json1_1CognitoIdentityProvider = (input, context) => {\n    return {\n        ...(input.ClientId != null && { ClientId: input.ClientId }),\n        ...(input.ProviderName != null && { ProviderName: input.ProviderName }),\n        ...(input.ServerSideTokenCheck != null && { ServerSideTokenCheck: input.ServerSideTokenCheck }),\n    };\n};\nconst serializeAws_json1_1CognitoIdentityProviderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n};\nconst serializeAws_json1_1CreateIdentityPoolInput = (input, context) => {\n    return {\n        ...(input.AllowClassicFlow != null && { AllowClassicFlow: input.AllowClassicFlow }),\n        ...(input.AllowUnauthenticatedIdentities != null && {\n            AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n        }),\n        ...(input.CognitoIdentityProviders != null && {\n            CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context),\n        }),\n        ...(input.DeveloperProviderName != null && { DeveloperProviderName: input.DeveloperProviderName }),\n        ...(input.IdentityPoolName != null && { IdentityPoolName: input.IdentityPoolName }),\n        ...(input.IdentityPoolTags != null && {\n            IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n        }),\n        ...(input.OpenIdConnectProviderARNs != null && {\n            OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n        }),\n        ...(input.SamlProviderARNs != null && {\n            SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n        }),\n        ...(input.SupportedLoginProviders != null && {\n            SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n        }),\n    };\n};\nconst serializeAws_json1_1DeleteIdentitiesInput = (input, context) => {\n    return {\n        ...(input.IdentityIdsToDelete != null && {\n            IdentityIdsToDelete: serializeAws_json1_1IdentityIdList(input.IdentityIdsToDelete, context),\n        }),\n    };\n};\nconst serializeAws_json1_1DeleteIdentityPoolInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n    };\n};\nconst serializeAws_json1_1DescribeIdentityInput = (input, context) => {\n    return {\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n    };\n};\nconst serializeAws_json1_1DescribeIdentityPoolInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n    };\n};\nconst serializeAws_json1_1GetCredentialsForIdentityInput = (input, context) => {\n    return {\n        ...(input.CustomRoleArn != null && { CustomRoleArn: input.CustomRoleArn }),\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    };\n};\nconst serializeAws_json1_1GetIdentityPoolRolesInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n    };\n};\nconst serializeAws_json1_1GetIdInput = (input, context) => {\n    return {\n        ...(input.AccountId != null && { AccountId: input.AccountId }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    };\n};\nconst serializeAws_json1_1GetOpenIdTokenForDeveloperIdentityInput = (input, context) => {\n    return {\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n        ...(input.PrincipalTags != null && {\n            PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context),\n        }),\n        ...(input.TokenDuration != null && { TokenDuration: input.TokenDuration }),\n    };\n};\nconst serializeAws_json1_1GetOpenIdTokenInput = (input, context) => {\n    return {\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n    };\n};\nconst serializeAws_json1_1GetPrincipalTagAttributeMapInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.IdentityProviderName != null && { IdentityProviderName: input.IdentityProviderName }),\n    };\n};\nconst serializeAws_json1_1IdentityIdList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1IdentityPool = (input, context) => {\n    return {\n        ...(input.AllowClassicFlow != null && { AllowClassicFlow: input.AllowClassicFlow }),\n        ...(input.AllowUnauthenticatedIdentities != null && {\n            AllowUnauthenticatedIdentities: input.AllowUnauthenticatedIdentities,\n        }),\n        ...(input.CognitoIdentityProviders != null && {\n            CognitoIdentityProviders: serializeAws_json1_1CognitoIdentityProviderList(input.CognitoIdentityProviders, context),\n        }),\n        ...(input.DeveloperProviderName != null && { DeveloperProviderName: input.DeveloperProviderName }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.IdentityPoolName != null && { IdentityPoolName: input.IdentityPoolName }),\n        ...(input.IdentityPoolTags != null && {\n            IdentityPoolTags: serializeAws_json1_1IdentityPoolTagsType(input.IdentityPoolTags, context),\n        }),\n        ...(input.OpenIdConnectProviderARNs != null && {\n            OpenIdConnectProviderARNs: serializeAws_json1_1OIDCProviderList(input.OpenIdConnectProviderARNs, context),\n        }),\n        ...(input.SamlProviderARNs != null && {\n            SamlProviderARNs: serializeAws_json1_1SAMLProviderList(input.SamlProviderARNs, context),\n        }),\n        ...(input.SupportedLoginProviders != null && {\n            SupportedLoginProviders: serializeAws_json1_1IdentityProviders(input.SupportedLoginProviders, context),\n        }),\n    };\n};\nconst serializeAws_json1_1IdentityPoolTagsListType = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1IdentityPoolTagsType = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1IdentityProviders = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1ListIdentitiesInput = (input, context) => {\n    return {\n        ...(input.HideDisabled != null && { HideDisabled: input.HideDisabled }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.MaxResults != null && { MaxResults: input.MaxResults }),\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n    };\n};\nconst serializeAws_json1_1ListIdentityPoolsInput = (input, context) => {\n    return {\n        ...(input.MaxResults != null && { MaxResults: input.MaxResults }),\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n    };\n};\nconst serializeAws_json1_1ListTagsForResourceInput = (input, context) => {\n    return {\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n    };\n};\nconst serializeAws_json1_1LoginsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1LoginsMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1LookupDeveloperIdentityInput = (input, context) => {\n    return {\n        ...(input.DeveloperUserIdentifier != null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier }),\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.MaxResults != null && { MaxResults: input.MaxResults }),\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n    };\n};\nconst serializeAws_json1_1MappingRule = (input, context) => {\n    return {\n        ...(input.Claim != null && { Claim: input.Claim }),\n        ...(input.MatchType != null && { MatchType: input.MatchType }),\n        ...(input.RoleARN != null && { RoleARN: input.RoleARN }),\n        ...(input.Value != null && { Value: input.Value }),\n    };\n};\nconst serializeAws_json1_1MappingRulesList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_1MappingRule(entry, context);\n    });\n};\nconst serializeAws_json1_1MergeDeveloperIdentitiesInput = (input, context) => {\n    return {\n        ...(input.DestinationUserIdentifier != null && { DestinationUserIdentifier: input.DestinationUserIdentifier }),\n        ...(input.DeveloperProviderName != null && { DeveloperProviderName: input.DeveloperProviderName }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.SourceUserIdentifier != null && { SourceUserIdentifier: input.SourceUserIdentifier }),\n    };\n};\nconst serializeAws_json1_1OIDCProviderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1PrincipalTags = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1RoleMapping = (input, context) => {\n    return {\n        ...(input.AmbiguousRoleResolution != null && { AmbiguousRoleResolution: input.AmbiguousRoleResolution }),\n        ...(input.RulesConfiguration != null && {\n            RulesConfiguration: serializeAws_json1_1RulesConfigurationType(input.RulesConfiguration, context),\n        }),\n        ...(input.Type != null && { Type: input.Type }),\n    };\n};\nconst serializeAws_json1_1RoleMappingMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_1RoleMapping(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1RolesMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_1RulesConfigurationType = (input, context) => {\n    return {\n        ...(input.Rules != null && { Rules: serializeAws_json1_1MappingRulesList(input.Rules, context) }),\n    };\n};\nconst serializeAws_json1_1SAMLProviderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_1SetIdentityPoolRolesInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.RoleMappings != null && {\n            RoleMappings: serializeAws_json1_1RoleMappingMap(input.RoleMappings, context),\n        }),\n        ...(input.Roles != null && { Roles: serializeAws_json1_1RolesMap(input.Roles, context) }),\n    };\n};\nconst serializeAws_json1_1SetPrincipalTagAttributeMapInput = (input, context) => {\n    return {\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n        ...(input.IdentityProviderName != null && { IdentityProviderName: input.IdentityProviderName }),\n        ...(input.PrincipalTags != null && {\n            PrincipalTags: serializeAws_json1_1PrincipalTags(input.PrincipalTags, context),\n        }),\n        ...(input.UseDefaults != null && { UseDefaults: input.UseDefaults }),\n    };\n};\nconst serializeAws_json1_1TagResourceInput = (input, context) => {\n    return {\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n        ...(input.Tags != null && { Tags: serializeAws_json1_1IdentityPoolTagsType(input.Tags, context) }),\n    };\n};\nconst serializeAws_json1_1UnlinkDeveloperIdentityInput = (input, context) => {\n    return {\n        ...(input.DeveloperProviderName != null && { DeveloperProviderName: input.DeveloperProviderName }),\n        ...(input.DeveloperUserIdentifier != null && { DeveloperUserIdentifier: input.DeveloperUserIdentifier }),\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.IdentityPoolId != null && { IdentityPoolId: input.IdentityPoolId }),\n    };\n};\nconst serializeAws_json1_1UnlinkIdentityInput = (input, context) => {\n    return {\n        ...(input.IdentityId != null && { IdentityId: input.IdentityId }),\n        ...(input.Logins != null && { Logins: serializeAws_json1_1LoginsMap(input.Logins, context) }),\n        ...(input.LoginsToRemove != null && {\n            LoginsToRemove: serializeAws_json1_1LoginsList(input.LoginsToRemove, context),\n        }),\n    };\n};\nconst serializeAws_json1_1UntagResourceInput = (input, context) => {\n    return {\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n        ...(input.TagKeys != null && { TagKeys: serializeAws_json1_1IdentityPoolTagsListType(input.TagKeys, context) }),\n    };\n};\nconst deserializeAws_json1_1CognitoIdentityProvider = (output, context) => {\n    return {\n        ClientId: __expectString(output.ClientId),\n        ProviderName: __expectString(output.ProviderName),\n        ServerSideTokenCheck: __expectBoolean(output.ServerSideTokenCheck),\n    };\n};\nconst deserializeAws_json1_1CognitoIdentityProviderList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1CognitoIdentityProvider(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1ConcurrentModificationException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1Credentials = (output, context) => {\n    return {\n        AccessKeyId: __expectString(output.AccessKeyId),\n        Expiration: output.Expiration != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.Expiration))) : undefined,\n        SecretKey: __expectString(output.SecretKey),\n        SessionToken: __expectString(output.SessionToken),\n    };\n};\nconst deserializeAws_json1_1DeleteIdentitiesResponse = (output, context) => {\n    return {\n        UnprocessedIdentityIds: output.UnprocessedIdentityIds != null\n            ? deserializeAws_json1_1UnprocessedIdentityIdList(output.UnprocessedIdentityIds, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1DeveloperUserAlreadyRegisteredException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1DeveloperUserIdentifierList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1ExternalServiceException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1GetCredentialsForIdentityResponse = (output, context) => {\n    return {\n        Credentials: output.Credentials != null ? deserializeAws_json1_1Credentials(output.Credentials, context) : undefined,\n        IdentityId: __expectString(output.IdentityId),\n    };\n};\nconst deserializeAws_json1_1GetIdentityPoolRolesResponse = (output, context) => {\n    return {\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        RoleMappings: output.RoleMappings != null ? deserializeAws_json1_1RoleMappingMap(output.RoleMappings, context) : undefined,\n        Roles: output.Roles != null ? deserializeAws_json1_1RolesMap(output.Roles, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1GetIdResponse = (output, context) => {\n    return {\n        IdentityId: __expectString(output.IdentityId),\n    };\n};\nconst deserializeAws_json1_1GetOpenIdTokenForDeveloperIdentityResponse = (output, context) => {\n    return {\n        IdentityId: __expectString(output.IdentityId),\n        Token: __expectString(output.Token),\n    };\n};\nconst deserializeAws_json1_1GetOpenIdTokenResponse = (output, context) => {\n    return {\n        IdentityId: __expectString(output.IdentityId),\n        Token: __expectString(output.Token),\n    };\n};\nconst deserializeAws_json1_1GetPrincipalTagAttributeMapResponse = (output, context) => {\n    return {\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        IdentityProviderName: __expectString(output.IdentityProviderName),\n        PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n        UseDefaults: __expectBoolean(output.UseDefaults),\n    };\n};\nconst deserializeAws_json1_1IdentitiesList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1IdentityDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1IdentityDescription = (output, context) => {\n    return {\n        CreationDate: output.CreationDate != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationDate)))\n            : undefined,\n        IdentityId: __expectString(output.IdentityId),\n        LastModifiedDate: output.LastModifiedDate != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastModifiedDate)))\n            : undefined,\n        Logins: output.Logins != null ? deserializeAws_json1_1LoginsList(output.Logins, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1IdentityPool = (output, context) => {\n    return {\n        AllowClassicFlow: __expectBoolean(output.AllowClassicFlow),\n        AllowUnauthenticatedIdentities: __expectBoolean(output.AllowUnauthenticatedIdentities),\n        CognitoIdentityProviders: output.CognitoIdentityProviders != null\n            ? deserializeAws_json1_1CognitoIdentityProviderList(output.CognitoIdentityProviders, context)\n            : undefined,\n        DeveloperProviderName: __expectString(output.DeveloperProviderName),\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        IdentityPoolName: __expectString(output.IdentityPoolName),\n        IdentityPoolTags: output.IdentityPoolTags != null\n            ? deserializeAws_json1_1IdentityPoolTagsType(output.IdentityPoolTags, context)\n            : undefined,\n        OpenIdConnectProviderARNs: output.OpenIdConnectProviderARNs != null\n            ? deserializeAws_json1_1OIDCProviderList(output.OpenIdConnectProviderARNs, context)\n            : undefined,\n        SamlProviderARNs: output.SamlProviderARNs != null\n            ? deserializeAws_json1_1SAMLProviderList(output.SamlProviderARNs, context)\n            : undefined,\n        SupportedLoginProviders: output.SupportedLoginProviders != null\n            ? deserializeAws_json1_1IdentityProviders(output.SupportedLoginProviders, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_1IdentityPoolShortDescription = (output, context) => {\n    return {\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        IdentityPoolName: __expectString(output.IdentityPoolName),\n    };\n};\nconst deserializeAws_json1_1IdentityPoolsList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1IdentityPoolShortDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1IdentityPoolTagsType = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __expectString(value);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1IdentityProviders = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __expectString(value);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1InternalErrorException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1InvalidIdentityPoolConfigurationException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1InvalidParameterException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1LimitExceededException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1ListIdentitiesResponse = (output, context) => {\n    return {\n        Identities: output.Identities != null ? deserializeAws_json1_1IdentitiesList(output.Identities, context) : undefined,\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_1ListIdentityPoolsResponse = (output, context) => {\n    return {\n        IdentityPools: output.IdentityPools != null ? deserializeAws_json1_1IdentityPoolsList(output.IdentityPools, context) : undefined,\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_1ListTagsForResourceResponse = (output, context) => {\n    return {\n        Tags: output.Tags != null ? deserializeAws_json1_1IdentityPoolTagsType(output.Tags, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1LoginsList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1LookupDeveloperIdentityResponse = (output, context) => {\n    return {\n        DeveloperUserIdentifierList: output.DeveloperUserIdentifierList != null\n            ? deserializeAws_json1_1DeveloperUserIdentifierList(output.DeveloperUserIdentifierList, context)\n            : undefined,\n        IdentityId: __expectString(output.IdentityId),\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_1MappingRule = (output, context) => {\n    return {\n        Claim: __expectString(output.Claim),\n        MatchType: __expectString(output.MatchType),\n        RoleARN: __expectString(output.RoleARN),\n        Value: __expectString(output.Value),\n    };\n};\nconst deserializeAws_json1_1MappingRulesList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1MappingRule(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1MergeDeveloperIdentitiesResponse = (output, context) => {\n    return {\n        IdentityId: __expectString(output.IdentityId),\n    };\n};\nconst deserializeAws_json1_1NotAuthorizedException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1OIDCProviderList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1PrincipalTags = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __expectString(value);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1ResourceConflictException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1ResourceNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1RoleMapping = (output, context) => {\n    return {\n        AmbiguousRoleResolution: __expectString(output.AmbiguousRoleResolution),\n        RulesConfiguration: output.RulesConfiguration != null\n            ? deserializeAws_json1_1RulesConfigurationType(output.RulesConfiguration, context)\n            : undefined,\n        Type: __expectString(output.Type),\n    };\n};\nconst deserializeAws_json1_1RoleMappingMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_1RoleMapping(value, context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1RolesMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __expectString(value);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_1RulesConfigurationType = (output, context) => {\n    return {\n        Rules: output.Rules != null ? deserializeAws_json1_1MappingRulesList(output.Rules, context) : undefined,\n    };\n};\nconst deserializeAws_json1_1SAMLProviderList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1SetPrincipalTagAttributeMapResponse = (output, context) => {\n    return {\n        IdentityPoolId: __expectString(output.IdentityPoolId),\n        IdentityProviderName: __expectString(output.IdentityProviderName),\n        PrincipalTags: output.PrincipalTags != null ? deserializeAws_json1_1PrincipalTags(output.PrincipalTags, context) : undefined,\n        UseDefaults: __expectBoolean(output.UseDefaults),\n    };\n};\nconst deserializeAws_json1_1TagResourceResponse = (output, context) => {\n    return {};\n};\nconst deserializeAws_json1_1TooManyRequestsException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_1UnprocessedIdentityId = (output, context) => {\n    return {\n        ErrorCode: __expectString(output.ErrorCode),\n        IdentityId: __expectString(output.IdentityId),\n    };\n};\nconst deserializeAws_json1_1UnprocessedIdentityIdList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_1UnprocessedIdentityId(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_1UntagResourceResponse = (output, context) => {\n    return {};\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}