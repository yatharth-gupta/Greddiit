{"ast":null,"code":"export const memoize = (provider, isExpired, requiresRefresh) => {\n  let resolved;\n  let pending;\n  let hasResult;\n  let isConstant = false;\n  const coalesceProvider = async () => {\n    if (!pending) {\n      pending = provider();\n    }\n    try {\n      resolved = await pending;\n      hasResult = true;\n      isConstant = false;\n    } finally {\n      pending = undefined;\n    }\n    return resolved;\n  };\n  if (isExpired === undefined) {\n    return async options => {\n      if (!hasResult || options?.forceRefresh) {\n        resolved = await coalesceProvider();\n      }\n      return resolved;\n    };\n  }\n  return async options => {\n    if (!hasResult || options?.forceRefresh) {\n      resolved = await coalesceProvider();\n    }\n    if (isConstant) {\n      return resolved;\n    }\n    if (requiresRefresh && !requiresRefresh(resolved)) {\n      isConstant = true;\n      return resolved;\n    }\n    if (isExpired(resolved)) {\n      await coalesceProvider();\n      return resolved;\n    }\n    return resolved;\n  };\n};","map":{"version":3,"names":["memoize","provider","isExpired","requiresRefresh","resolved","pending","hasResult","isConstant","coalesceProvider","undefined","options","forceRefresh"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/property-provider/dist-es/memoize.js"],"sourcesContent":["export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,QAAQ,EAAEC,SAAS,EAAEC,eAAe,KAAK;EAC7D,IAAIC,QAAQ;EACZ,IAAIC,OAAO;EACX,IAAIC,SAAS;EACb,IAAIC,UAAU,GAAG,KAAK;EACtB,MAAMC,gBAAgB,GAAG,YAAY;IACjC,IAAI,CAACH,OAAO,EAAE;MACVA,OAAO,GAAGJ,QAAQ,EAAE;IACxB;IACA,IAAI;MACAG,QAAQ,GAAG,MAAMC,OAAO;MACxBC,SAAS,GAAG,IAAI;MAChBC,UAAU,GAAG,KAAK;IACtB,CAAC,SACO;MACJF,OAAO,GAAGI,SAAS;IACvB;IACA,OAAOL,QAAQ;EACnB,CAAC;EACD,IAAIF,SAAS,KAAKO,SAAS,EAAE;IACzB,OAAO,MAAOC,OAAO,IAAK;MACtB,IAAI,CAACJ,SAAS,IAAII,OAAO,EAAEC,YAAY,EAAE;QACrCP,QAAQ,GAAG,MAAMI,gBAAgB,EAAE;MACvC;MACA,OAAOJ,QAAQ;IACnB,CAAC;EACL;EACA,OAAO,MAAOM,OAAO,IAAK;IACtB,IAAI,CAACJ,SAAS,IAAII,OAAO,EAAEC,YAAY,EAAE;MACrCP,QAAQ,GAAG,MAAMI,gBAAgB,EAAE;IACvC;IACA,IAAID,UAAU,EAAE;MACZ,OAAOH,QAAQ;IACnB;IACA,IAAID,eAAe,IAAI,CAACA,eAAe,CAACC,QAAQ,CAAC,EAAE;MAC/CG,UAAU,GAAG,IAAI;MACjB,OAAOH,QAAQ;IACnB;IACA,IAAIF,SAAS,CAACE,QAAQ,CAAC,EAAE;MACrB,MAAMI,gBAAgB,EAAE;MACxB,OAAOJ,QAAQ;IACnB;IACA,OAAOA,QAAQ;EACnB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}