{"ast":null,"code":"import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n  if (!customizations) return baseCtor;else return class CustomizableSTSClient extends baseCtor {\n    constructor(config) {\n      super(config);\n      for (const customization of customizations) {\n        this.middlewareStack.use(customization);\n      }\n    }\n  };\n};\nexport const getDefaultRoleAssumer = function () {\n  let stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let stsPlugins = arguments.length > 1 ? arguments[1] : undefined;\n  return StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\n};\nexport const getDefaultRoleAssumerWithWebIdentity = function () {\n  let stsOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let stsPlugins = arguments.length > 1 ? arguments[1] : undefined;\n  return StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\n};\nexport const decorateDefaultCredentialProvider = provider => input => provider({\n  roleAssumer: getDefaultRoleAssumer(input),\n  roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n  ...input\n});","map":{"version":3,"names":["getDefaultRoleAssumer","StsGetDefaultRoleAssumer","getDefaultRoleAssumerWithWebIdentity","StsGetDefaultRoleAssumerWithWebIdentity","STSClient","getCustomizableStsClientCtor","baseCtor","customizations","CustomizableSTSClient","constructor","config","customization","middlewareStack","use","stsOptions","stsPlugins","decorateDefaultCredentialProvider","provider","input","roleAssumer","roleAssumerWithWebIdentity"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js"],"sourcesContent":["import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n"],"mappings":"AAAA,SAASA,qBAAqB,IAAIC,wBAAwB,EAAEC,oCAAoC,IAAIC,uCAAuC,QAAS,0BAA0B;AAC9K,SAASC,SAAS,QAAQ,aAAa;AACvC,MAAMC,4BAA4B,GAAG,CAACC,QAAQ,EAAEC,cAAc,KAAK;EAC/D,IAAI,CAACA,cAAc,EACf,OAAOD,QAAQ,CAAC,KAEhB,OAAO,MAAME,qBAAqB,SAASF,QAAQ,CAAC;IAChDG,WAAW,CAACC,MAAM,EAAE;MAChB,KAAK,CAACA,MAAM,CAAC;MACb,KAAK,MAAMC,aAAa,IAAIJ,cAAc,EAAE;QACxC,IAAI,CAACK,eAAe,CAACC,GAAG,CAACF,aAAa,CAAC;MAC3C;IACJ;EACJ,CAAC;AACT,CAAC;AACD,OAAO,MAAMX,qBAAqB,GAAG;EAAA,IAACc,UAAU,uEAAG,CAAC,CAAC;EAAA,IAAEC,UAAU;EAAA,OAAKd,wBAAwB,CAACa,UAAU,EAAET,4BAA4B,CAACD,SAAS,EAAEW,UAAU,CAAC,CAAC;AAAA;AAC/J,OAAO,MAAMb,oCAAoC,GAAG;EAAA,IAACY,UAAU,uEAAG,CAAC,CAAC;EAAA,IAAEC,UAAU;EAAA,OAAKZ,uCAAuC,CAACW,UAAU,EAAET,4BAA4B,CAACD,SAAS,EAAEW,UAAU,CAAC,CAAC;AAAA;AAC7L,OAAO,MAAMC,iCAAiC,GAAIC,QAAQ,IAAMC,KAAK,IAAKD,QAAQ,CAAC;EAC/EE,WAAW,EAAEnB,qBAAqB,CAACkB,KAAK,CAAC;EACzCE,0BAA0B,EAAElB,oCAAoC,CAACgB,KAAK,CAAC;EACvE,GAAGA;AACP,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}