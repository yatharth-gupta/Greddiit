{"ast":null,"code":"import { fromBase64 } from \"@aws-sdk/util-base64\";\nexport const streamCollector = stream => {\n  if (typeof Blob === \"function\" && stream instanceof Blob) {\n    return collectBlob(stream);\n  }\n  return collectStream(stream);\n};\nasync function collectBlob(blob) {\n  const base64 = await readToBase64(blob);\n  const arrayBuffer = fromBase64(base64);\n  return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n  let res = new Uint8Array(0);\n  const reader = stream.getReader();\n  let isDone = false;\n  while (!isDone) {\n    const {\n      done,\n      value\n    } = await reader.read();\n    if (value) {\n      const prior = res;\n      res = new Uint8Array(prior.length + value.length);\n      res.set(prior);\n      res.set(value, prior.length);\n    }\n    isDone = done;\n  }\n  return res;\n}\nfunction readToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (reader.readyState !== 2) {\n        return reject(new Error(\"Reader aborted too early\"));\n      }\n      const result = reader.result ?? \"\";\n      const commaIndex = result.indexOf(\",\");\n      const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n      resolve(result.substring(dataOffset));\n    };\n    reader.onabort = () => reject(new Error(\"Read aborted\"));\n    reader.onerror = () => reject(reader.error);\n    reader.readAsDataURL(blob);\n  });\n}","map":{"version":3,"names":["fromBase64","streamCollector","stream","Blob","collectBlob","collectStream","blob","base64","readToBase64","arrayBuffer","Uint8Array","res","reader","getReader","isDone","done","value","read","prior","length","set","Promise","resolve","reject","FileReader","onloadend","readyState","Error","result","commaIndex","indexOf","dataOffset","substring","onabort","onerror","error","readAsDataURL"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/fetch-http-handler/dist-es/stream-collector.js"],"sourcesContent":["import { fromBase64 } from \"@aws-sdk/util-base64\";\nexport const streamCollector = (stream) => {\n    if (typeof Blob === \"function\" && stream instanceof Blob) {\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    let res = new Uint8Array(0);\n    const reader = stream.getReader();\n    let isDone = false;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            const prior = res;\n            res = new Uint8Array(prior.length + value.length);\n            res.set(prior);\n            res.set(value, prior.length);\n        }\n        isDone = done;\n    }\n    return res;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,OAAO,MAAMC,eAAe,GAAIC,MAAM,IAAK;EACvC,IAAI,OAAOC,IAAI,KAAK,UAAU,IAAID,MAAM,YAAYC,IAAI,EAAE;IACtD,OAAOC,WAAW,CAACF,MAAM,CAAC;EAC9B;EACA,OAAOG,aAAa,CAACH,MAAM,CAAC;AAChC,CAAC;AACD,eAAeE,WAAW,CAACE,IAAI,EAAE;EAC7B,MAAMC,MAAM,GAAG,MAAMC,YAAY,CAACF,IAAI,CAAC;EACvC,MAAMG,WAAW,GAAGT,UAAU,CAACO,MAAM,CAAC;EACtC,OAAO,IAAIG,UAAU,CAACD,WAAW,CAAC;AACtC;AACA,eAAeJ,aAAa,CAACH,MAAM,EAAE;EACjC,IAAIS,GAAG,GAAG,IAAID,UAAU,CAAC,CAAC,CAAC;EAC3B,MAAME,MAAM,GAAGV,MAAM,CAACW,SAAS,EAAE;EACjC,IAAIC,MAAM,GAAG,KAAK;EAClB,OAAO,CAACA,MAAM,EAAE;IACZ,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMJ,MAAM,CAACK,IAAI,EAAE;IAC3C,IAAID,KAAK,EAAE;MACP,MAAME,KAAK,GAAGP,GAAG;MACjBA,GAAG,GAAG,IAAID,UAAU,CAACQ,KAAK,CAACC,MAAM,GAAGH,KAAK,CAACG,MAAM,CAAC;MACjDR,GAAG,CAACS,GAAG,CAACF,KAAK,CAAC;MACdP,GAAG,CAACS,GAAG,CAACJ,KAAK,EAAEE,KAAK,CAACC,MAAM,CAAC;IAChC;IACAL,MAAM,GAAGC,IAAI;EACjB;EACA,OAAOJ,GAAG;AACd;AACA,SAASH,YAAY,CAACF,IAAI,EAAE;EACxB,OAAO,IAAIe,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMX,MAAM,GAAG,IAAIY,UAAU,EAAE;IAC/BZ,MAAM,CAACa,SAAS,GAAG,MAAM;MACrB,IAAIb,MAAM,CAACc,UAAU,KAAK,CAAC,EAAE;QACzB,OAAOH,MAAM,CAAC,IAAII,KAAK,CAAC,0BAA0B,CAAC,CAAC;MACxD;MACA,MAAMC,MAAM,GAAIhB,MAAM,CAACgB,MAAM,IAAI,EAAG;MACpC,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO,CAAC,GAAG,CAAC;MACtC,MAAMC,UAAU,GAAGF,UAAU,GAAG,CAAC,CAAC,GAAGA,UAAU,GAAG,CAAC,GAAGD,MAAM,CAACT,MAAM;MACnEG,OAAO,CAACM,MAAM,CAACI,SAAS,CAACD,UAAU,CAAC,CAAC;IACzC,CAAC;IACDnB,MAAM,CAACqB,OAAO,GAAG,MAAMV,MAAM,CAAC,IAAII,KAAK,CAAC,cAAc,CAAC,CAAC;IACxDf,MAAM,CAACsB,OAAO,GAAG,MAAMX,MAAM,CAACX,MAAM,CAACuB,KAAK,CAAC;IAC3CvB,MAAM,CAACwB,aAAa,CAAC9B,IAAI,CAAC;EAC9B,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}