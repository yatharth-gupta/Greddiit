{"ast":null,"code":"import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES } from \"./constants\";\nexport const isRetryableByTrait = error => error.$retryable !== undefined;\nexport const isClockSkewError = error => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isThrottlingError = error => error.$metadata?.httpStatusCode === 429 || THROTTLING_ERROR_CODES.includes(error.name) || error.$retryable?.throttling == true;\nexport const isTransientError = error => TRANSIENT_ERROR_CODES.includes(error.name) || NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") || TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nexport const isServerError = error => {\n  if (error.$metadata?.httpStatusCode !== undefined) {\n    const statusCode = error.$metadata.httpStatusCode;\n    if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n      return true;\n    }\n    return false;\n  }\n  return false;\n};","map":{"version":3,"names":["CLOCK_SKEW_ERROR_CODES","NODEJS_TIMEOUT_ERROR_CODES","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","isRetryableByTrait","error","$retryable","undefined","isClockSkewError","includes","name","isThrottlingError","$metadata","httpStatusCode","throttling","isTransientError","code","isServerError","statusCode"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/service-error-classification/dist-es/index.js"],"sourcesContent":["import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error) => TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n"],"mappings":"AAAA,SAASA,sBAAsB,EAAEC,0BAA0B,EAAEC,sBAAsB,EAAEC,qBAAqB,EAAEC,4BAA4B,QAAS,aAAa;AAC9J,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAKA,KAAK,CAACC,UAAU,KAAKC,SAAS;AAC3E,OAAO,MAAMC,gBAAgB,GAAIH,KAAK,IAAKN,sBAAsB,CAACU,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAAC;AACtF,OAAO,MAAMC,iBAAiB,GAAIN,KAAK,IAAKA,KAAK,CAACO,SAAS,EAAEC,cAAc,KAAK,GAAG,IAC/EZ,sBAAsB,CAACQ,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAAC,IAC3CL,KAAK,CAACC,UAAU,EAAEQ,UAAU,IAAI,IAAI;AACxC,OAAO,MAAMC,gBAAgB,GAAIV,KAAK,IAAKH,qBAAqB,CAACO,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAAC,IACjFV,0BAA0B,CAACS,QAAQ,CAACJ,KAAK,EAAEW,IAAI,IAAI,EAAE,CAAC,IACtDb,4BAA4B,CAACM,QAAQ,CAACJ,KAAK,CAACO,SAAS,EAAEC,cAAc,IAAI,CAAC,CAAC;AAC/E,OAAO,MAAMI,aAAa,GAAIZ,KAAK,IAAK;EACpC,IAAIA,KAAK,CAACO,SAAS,EAAEC,cAAc,KAAKN,SAAS,EAAE;IAC/C,MAAMW,UAAU,GAAGb,KAAK,CAACO,SAAS,CAACC,cAAc;IACjD,IAAI,GAAG,IAAIK,UAAU,IAAIA,UAAU,IAAI,GAAG,IAAI,CAACH,gBAAgB,CAACV,KAAK,CAAC,EAAE;MACpE,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACA,OAAO,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}