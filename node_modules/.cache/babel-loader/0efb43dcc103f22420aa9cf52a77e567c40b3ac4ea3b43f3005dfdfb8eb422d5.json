{"ast":null,"code":"export const loggerMiddleware = () => (next, context) => async args => {\n  const response = await next(args);\n  const {\n    clientName,\n    commandName,\n    logger,\n    inputFilterSensitiveLog,\n    outputFilterSensitiveLog,\n    dynamoDbDocumentClientOptions = {}\n  } = context;\n  const {\n    overrideInputFilterSensitiveLog,\n    overrideOutputFilterSensitiveLog\n  } = dynamoDbDocumentClientOptions;\n  if (!logger) {\n    return response;\n  }\n  if (typeof logger.info === \"function\") {\n    const {\n      $metadata,\n      ...outputWithoutMetadata\n    } = response.output;\n    logger.info({\n      clientName,\n      commandName,\n      input: (overrideInputFilterSensitiveLog ?? inputFilterSensitiveLog)(args.input),\n      output: (overrideOutputFilterSensitiveLog ?? outputFilterSensitiveLog)(outputWithoutMetadata),\n      metadata: $metadata\n    });\n  }\n  return response;\n};\nexport const loggerMiddlewareOptions = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true\n};\nexport const getLoggerPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["loggerMiddleware","next","context","args","response","clientName","commandName","logger","inputFilterSensitiveLog","outputFilterSensitiveLog","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","info","$metadata","outputWithoutMetadata","output","input","metadata","loggerMiddlewareOptions","name","tags","step","override","getLoggerPlugin","options","applyToStack","clientStack","add"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js"],"sourcesContent":["export const loggerMiddleware = () => (next, context) => async (args) => {\n    const response = await next(args);\n    const { clientName, commandName, logger, inputFilterSensitiveLog, outputFilterSensitiveLog, dynamoDbDocumentClientOptions = {}, } = context;\n    const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: (overrideInputFilterSensitiveLog ?? inputFilterSensitiveLog)(args.input),\n            output: (overrideOutputFilterSensitiveLog ?? outputFilterSensitiveLog)(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAM,CAACC,IAAI,EAAEC,OAAO,KAAK,MAAOC,IAAI,IAAK;EACrE,MAAMC,QAAQ,GAAG,MAAMH,IAAI,CAACE,IAAI,CAAC;EACjC,MAAM;IAAEE,UAAU;IAAEC,WAAW;IAAEC,MAAM;IAAEC,uBAAuB;IAAEC,wBAAwB;IAAEC,6BAA6B,GAAG,CAAC;EAAG,CAAC,GAAGR,OAAO;EAC3I,MAAM;IAAES,+BAA+B;IAAEC;EAAiC,CAAC,GAAGF,6BAA6B;EAC3G,IAAI,CAACH,MAAM,EAAE;IACT,OAAOH,QAAQ;EACnB;EACA,IAAI,OAAOG,MAAM,CAACM,IAAI,KAAK,UAAU,EAAE;IACnC,MAAM;MAAEC,SAAS;MAAE,GAAGC;IAAsB,CAAC,GAAGX,QAAQ,CAACY,MAAM;IAC/DT,MAAM,CAACM,IAAI,CAAC;MACRR,UAAU;MACVC,WAAW;MACXW,KAAK,EAAE,CAACN,+BAA+B,IAAIH,uBAAuB,EAAEL,IAAI,CAACc,KAAK,CAAC;MAC/ED,MAAM,EAAE,CAACJ,gCAAgC,IAAIH,wBAAwB,EAAEM,qBAAqB,CAAC;MAC7FG,QAAQ,EAAEJ;IACd,CAAC,CAAC;EACN;EACA,OAAOV,QAAQ;AACnB,CAAC;AACD,OAAO,MAAMe,uBAAuB,GAAG;EACnCC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,CAAC,QAAQ,CAAC;EAChBC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,eAAe,GAAIC,OAAO,KAAM;EACzCC,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAAC5B,gBAAgB,EAAE,EAAEmB,uBAAuB,CAAC;EAChE;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}