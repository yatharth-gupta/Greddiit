{"ast":null,"code":"import { CognitoIdentity } from \"../CognitoIdentity\";\nimport { CognitoIdentityClient } from \"../CognitoIdentityClient\";\nimport { ListIdentityPoolsCommand } from \"../commands/ListIdentityPoolsCommand\";\nconst makePagedClientRequest = async function (client, input) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  return await client.send(new ListIdentityPoolsCommand(input), ...args);\n};\nconst makePagedRequest = async function (client, input) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n  return await client.listIdentityPools(input, ...args);\n};\nexport async function* paginateListIdentityPools(config, input) {\n  let token = config.startingToken || undefined;\n  let hasNext = true;\n  let page;\n  for (var _len3 = arguments.length, additionalArguments = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    additionalArguments[_key3 - 2] = arguments[_key3];\n  }\n  while (hasNext) {\n    input.NextToken = token;\n    input[\"MaxResults\"] = config.pageSize;\n    if (config.client instanceof CognitoIdentity) {\n      page = await makePagedRequest(config.client, input, ...additionalArguments);\n    } else if (config.client instanceof CognitoIdentityClient) {\n      page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n    } else {\n      throw new Error(\"Invalid client, expected CognitoIdentity | CognitoIdentityClient\");\n    }\n    yield page;\n    const prevToken = token;\n    token = page.NextToken;\n    hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n  }\n  return undefined;\n}","map":{"version":3,"names":["CognitoIdentity","CognitoIdentityClient","ListIdentityPoolsCommand","makePagedClientRequest","client","input","args","send","makePagedRequest","listIdentityPools","paginateListIdentityPools","config","token","startingToken","undefined","hasNext","page","additionalArguments","NextToken","pageSize","Error","prevToken","stopOnSameToken"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/client-cognito-identity/dist-es/pagination/ListIdentityPoolsPaginator.js"],"sourcesContent":["import { CognitoIdentity } from \"../CognitoIdentity\";\nimport { CognitoIdentityClient } from \"../CognitoIdentityClient\";\nimport { ListIdentityPoolsCommand, } from \"../commands/ListIdentityPoolsCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListIdentityPoolsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listIdentityPools(input, ...args);\n};\nexport async function* paginateListIdentityPools(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CognitoIdentity) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CognitoIdentityClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CognitoIdentity | CognitoIdentityClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,oBAAoB;AACpD,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,SAASC,wBAAwB,QAAS,sCAAsC;AAChF,MAAMC,sBAAsB,GAAG,gBAAOC,MAAM,EAAEC,KAAK,EAAc;EAAA,kCAATC,IAAI;IAAJA,IAAI;EAAA;EACxD,OAAO,MAAMF,MAAM,CAACG,IAAI,CAAC,IAAIL,wBAAwB,CAACG,KAAK,CAAC,EAAE,GAAGC,IAAI,CAAC;AAC1E,CAAC;AACD,MAAME,gBAAgB,GAAG,gBAAOJ,MAAM,EAAEC,KAAK,EAAc;EAAA,mCAATC,IAAI;IAAJA,IAAI;EAAA;EAClD,OAAO,MAAMF,MAAM,CAACK,iBAAiB,CAACJ,KAAK,EAAE,GAAGC,IAAI,CAAC;AACzD,CAAC;AACD,OAAO,gBAAgBI,yBAAyB,CAACC,MAAM,EAAEN,KAAK,EAA0B;EACpF,IAAIO,KAAK,GAAGD,MAAM,CAACE,aAAa,IAAIC,SAAS;EAC7C,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,IAAI;EAAC,mCAHsDC,mBAAmB;IAAnBA,mBAAmB;EAAA;EAIlF,OAAOF,OAAO,EAAE;IACZV,KAAK,CAACa,SAAS,GAAGN,KAAK;IACvBP,KAAK,CAAC,YAAY,CAAC,GAAGM,MAAM,CAACQ,QAAQ;IACrC,IAAIR,MAAM,CAACP,MAAM,YAAYJ,eAAe,EAAE;MAC1CgB,IAAI,GAAG,MAAMR,gBAAgB,CAACG,MAAM,CAACP,MAAM,EAAEC,KAAK,EAAE,GAAGY,mBAAmB,CAAC;IAC/E,CAAC,MACI,IAAIN,MAAM,CAACP,MAAM,YAAYH,qBAAqB,EAAE;MACrDe,IAAI,GAAG,MAAMb,sBAAsB,CAACQ,MAAM,CAACP,MAAM,EAAEC,KAAK,EAAE,GAAGY,mBAAmB,CAAC;IACrF,CAAC,MACI;MACD,MAAM,IAAIG,KAAK,CAAC,kEAAkE,CAAC;IACvF;IACA,MAAMJ,IAAI;IACV,MAAMK,SAAS,GAAGT,KAAK;IACvBA,KAAK,GAAGI,IAAI,CAACE,SAAS;IACtBH,OAAO,GAAG,CAAC,EAAEH,KAAK,KAAK,CAACD,MAAM,CAACW,eAAe,IAAIV,KAAK,KAAKS,SAAS,CAAC,CAAC;EAC3E;EACA,OAAOP,SAAS;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}