{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeDeleteStatement = exports.DeleteManyOperation = exports.DeleteOneOperation = exports.DeleteOperation = void 0;\nconst error_1 = require(\"../error\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass DeleteOperation extends command_1.CommandOperation {\n  constructor(ns, statements, options) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n    this.statements = statements;\n  }\n  get canRetryWrite() {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n    return this.statements.every(op => op.limit != null ? op.limit > 0 : true);\n  }\n  execute(server, session, callback) {\n    var _a;\n    const options = (_a = this.options) !== null && _a !== void 0 ? _a : {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command = {\n      delete: this.ns.collection,\n      deletes: this.statements,\n      ordered\n    };\n    if (options.let) {\n      command.let = options.let;\n    }\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n    if (unacknowledgedWrite) {\n      if (this.statements.find(o => o.hint)) {\n        // TODO(NODE-3541): fix error for hint with unacknowledged writes\n        callback(new error_1.MongoCompatibilityError(`hint is not supported with unacknowledged writes`));\n        return;\n      }\n    }\n    super.executeCommand(server, session, command, callback);\n  }\n}\nexports.DeleteOperation = DeleteOperation;\nclass DeleteOneOperation extends DeleteOperation {\n  constructor(collection, filter, options) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, {\n      ...options,\n      limit: 1\n    })], options);\n  }\n  execute(server, session, callback) {\n    super.execute(server, session, (err, res) => {\n      var _a, _b;\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new error_1.MongoServerError(res));\n      if (res.writeErrors) return callback(new error_1.MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n      callback(undefined, {\n        acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\nexports.DeleteOneOperation = DeleteOneOperation;\nclass DeleteManyOperation extends DeleteOperation {\n  constructor(collection, filter, options) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, options)], options);\n  }\n  execute(server, session, callback) {\n    super.execute(server, session, (err, res) => {\n      var _a, _b;\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new error_1.MongoServerError(res));\n      if (res.writeErrors) return callback(new error_1.MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n      callback(undefined, {\n        acknowledged: (_b = ((_a = this.writeConcern) === null || _a === void 0 ? void 0 : _a.w) !== 0) !== null && _b !== void 0 ? _b : true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\nexports.DeleteManyOperation = DeleteManyOperation;\nfunction makeDeleteStatement(filter, options) {\n  const op = {\n    q: filter,\n    limit: typeof options.limit === 'number' ? options.limit : 0\n  };\n  if (options.single === true) {\n    op.limit = 1;\n  }\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n  return op;\n}\nexports.makeDeleteStatement = makeDeleteStatement;\n(0, operation_1.defineAspects)(DeleteOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DeleteOneOperation, [operation_1.Aspect.RETRYABLE, operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.EXPLAINABLE, operation_1.Aspect.SKIP_COLLATION]);\n(0, operation_1.defineAspects)(DeleteManyOperation, [operation_1.Aspect.WRITE_OPERATION, operation_1.Aspect.EXPLAINABLE, operation_1.Aspect.SKIP_COLLATION]);","map":{"version":3,"mappings":"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","names":["DeleteOperation","command_1","constructor","ns","statements","options","undefined","canRetryWrite","every","op","limit","execute","server","session","callback","ordered","command","delete","collection","deletes","let","comment","unacknowledgedWrite","writeConcern","w","find","o","hint","error_1","executeCommand","exports","DeleteOneOperation","filter","s","namespace","makeDeleteStatement","err","res","code","writeErrors","explain","acknowledged","deletedCount","n","DeleteManyOperation","q","single","collation","operation_1","RETRYABLE","WRITE_OPERATION","EXPLAINABLE","SKIP_COLLATION"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/mongodb/src/operations/delete.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoCompatibilityError, MongoServerError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport type { WriteConcernOptions } from '../write_concern';\nimport { CollationOptions, CommandOperation, CommandOperationOptions } from './command';\nimport { Aspect, defineAspects, Hint } from './operation';\n\n/** @public */\nexport interface DeleteOptions extends CommandOperationOptions, WriteConcernOptions {\n  /** If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails. */\n  ordered?: boolean;\n  /** Specifies the collation to use for the operation */\n  collation?: CollationOptions;\n  /** Specify that the update query should only consider plans using the hinted index */\n  hint?: string | Document;\n  /** Map of parameter names and values that can be accessed using $$var (requires MongoDB 5.0). */\n  let?: Document;\n\n  /** @deprecated use `removeOne` or `removeMany` to implicitly specify the limit */\n  single?: boolean;\n}\n\n/** @public */\nexport interface DeleteResult {\n  /** Indicates whether this write result was acknowledged. If not, then all other members of this result will be undefined. */\n  acknowledged: boolean;\n  /** The number of documents that were deleted */\n  deletedCount: number;\n}\n\n/** @public */\nexport interface DeleteStatement {\n  /** The query that matches documents to delete. */\n  q: Document;\n  /** The number of matching documents to delete. */\n  limit: number;\n  /** Specifies the collation to use for the operation. */\n  collation?: CollationOptions;\n  /** A document or string that specifies the index to use to support the query predicate. */\n  hint?: Hint;\n}\n\n/** @internal */\nexport class DeleteOperation extends CommandOperation<DeleteResult> {\n  override options: DeleteOptions;\n  statements: DeleteStatement[];\n\n  constructor(ns: MongoDBNamespace, statements: DeleteStatement[], options: DeleteOptions) {\n    super(undefined, options);\n    this.options = options;\n    this.ns = ns;\n    this.statements = statements;\n  }\n\n  override get canRetryWrite(): boolean {\n    if (super.canRetryWrite === false) {\n      return false;\n    }\n\n    return this.statements.every(op => (op.limit != null ? op.limit > 0 : true));\n  }\n\n  override execute(server: Server, session: ClientSession | undefined, callback: Callback): void {\n    const options = this.options ?? {};\n    const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n    const command: Document = {\n      delete: this.ns.collection,\n      deletes: this.statements,\n      ordered\n    };\n\n    if (options.let) {\n      command.let = options.let;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      command.comment = options.comment;\n    }\n\n    const unacknowledgedWrite = this.writeConcern && this.writeConcern.w === 0;\n    if (unacknowledgedWrite) {\n      if (this.statements.find((o: Document) => o.hint)) {\n        // TODO(NODE-3541): fix error for hint with unacknowledged writes\n        callback(new MongoCompatibilityError(`hint is not supported with unacknowledged writes`));\n        return;\n      }\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\nexport class DeleteOneOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, { ...options, limit: 1 })], options);\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<DeleteResult>\n  ): void {\n    super.execute(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\n\nexport class DeleteManyOperation extends DeleteOperation {\n  constructor(collection: Collection, filter: Document, options: DeleteOptions) {\n    super(collection.s.namespace, [makeDeleteStatement(filter, options)], options);\n  }\n\n  override execute(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<DeleteResult>\n  ): void {\n    super.execute(server, session, (err, res) => {\n      if (err || res == null) return callback(err);\n      if (res.code) return callback(new MongoServerError(res));\n      if (res.writeErrors) return callback(new MongoServerError(res.writeErrors[0]));\n      if (this.explain) return callback(undefined, res);\n\n      callback(undefined, {\n        acknowledged: this.writeConcern?.w !== 0 ?? true,\n        deletedCount: res.n\n      });\n    });\n  }\n}\n\nexport function makeDeleteStatement(\n  filter: Document,\n  options: DeleteOptions & { limit?: number }\n): DeleteStatement {\n  const op: DeleteStatement = {\n    q: filter,\n    limit: typeof options.limit === 'number' ? options.limit : 0\n  };\n\n  if (options.single === true) {\n    op.limit = 1;\n  }\n\n  if (options.collation) {\n    op.collation = options.collation;\n  }\n\n  if (options.hint) {\n    op.hint = options.hint;\n  }\n\n  return op;\n}\n\ndefineAspects(DeleteOperation, [Aspect.RETRYABLE, Aspect.WRITE_OPERATION]);\ndefineAspects(DeleteOneOperation, [\n  Aspect.RETRYABLE,\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\ndefineAspects(DeleteManyOperation, [\n  Aspect.WRITE_OPERATION,\n  Aspect.EXPLAINABLE,\n  Aspect.SKIP_COLLATION\n]);\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}