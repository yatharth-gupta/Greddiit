{"ast":null,"code":"import { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n  return input;\n}\nexport const hostHeaderMiddleware = options => next => async args => {\n  if (!HttpRequest.isInstance(args.request)) return next(args);\n  const {\n    request\n  } = args;\n  const {\n    handlerProtocol = \"\"\n  } = options.requestHandler.metadata || {};\n  if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n    delete request.headers[\"host\"];\n    request.headers[\":authority\"] = \"\";\n  } else if (!request.headers[\"host\"]) {\n    request.headers[\"host\"] = request.hostname;\n  }\n  return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n  name: \"hostHeaderMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"HOST\"],\n  override: true\n};\nexport const getHostHeaderPlugin = options => ({\n  applyToStack: clientStack => {\n    clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n  }\n});","map":{"version":3,"names":["HttpRequest","resolveHostHeaderConfig","input","hostHeaderMiddleware","options","next","args","isInstance","request","handlerProtocol","requestHandler","metadata","indexOf","headers","hostname","hostHeaderMiddlewareOptions","name","step","priority","tags","override","getHostHeaderPlugin","applyToStack","clientStack","add"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/middleware-host-header/dist-es/index.js"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        request.headers[\"host\"] = request.hostname;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,OAAO,SAASC,uBAAuB,CAACC,KAAK,EAAE;EAC3C,OAAOA,KAAK;AAChB;AACA,OAAO,MAAMC,oBAAoB,GAAIC,OAAO,IAAMC,IAAI,IAAK,MAAOC,IAAI,IAAK;EACvE,IAAI,CAACN,WAAW,CAACO,UAAU,CAACD,IAAI,CAACE,OAAO,CAAC,EACrC,OAAOH,IAAI,CAACC,IAAI,CAAC;EACrB,MAAM;IAAEE;EAAQ,CAAC,GAAGF,IAAI;EACxB,MAAM;IAAEG,eAAe,GAAG;EAAG,CAAC,GAAGL,OAAO,CAACM,cAAc,CAACC,QAAQ,IAAI,CAAC,CAAC;EACtE,IAAIF,eAAe,CAACG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAACJ,OAAO,CAACK,OAAO,CAAC,YAAY,CAAC,EAAE;IACtE,OAAOL,OAAO,CAACK,OAAO,CAAC,MAAM,CAAC;IAC9BL,OAAO,CAACK,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE;EACtC,CAAC,MACI,IAAI,CAACL,OAAO,CAACK,OAAO,CAAC,MAAM,CAAC,EAAE;IAC/BL,OAAO,CAACK,OAAO,CAAC,MAAM,CAAC,GAAGL,OAAO,CAACM,QAAQ;EAC9C;EACA,OAAOT,IAAI,CAACC,IAAI,CAAC;AACrB,CAAC;AACD,OAAO,MAAMS,2BAA2B,GAAG;EACvCC,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE,CAAC,MAAM,CAAC;EACdC,QAAQ,EAAE;AACd,CAAC;AACD,OAAO,MAAMC,mBAAmB,GAAIjB,OAAO,KAAM;EAC7CkB,YAAY,EAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAACrB,oBAAoB,CAACC,OAAO,CAAC,EAAEW,2BAA2B,CAAC;EAC/E;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}