{"ast":null,"code":"import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = _ref => {\n  let {\n    output,\n    parsedBody,\n    exceptionCtor,\n    errorCode\n  } = _ref;\n  const $metadata = deserializeMetadata(output);\n  const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n  const response = new exceptionCtor({\n    name: parsedBody.code || parsedBody.Code || errorCode || statusCode || \"UnknownError\",\n    $fault: \"client\",\n    $metadata\n  });\n  throw decorateServiceException(response, parsedBody);\n};\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});","map":{"version":3,"names":["decorateServiceException","throwDefaultError","output","parsedBody","exceptionCtor","errorCode","$metadata","deserializeMetadata","statusCode","httpStatusCode","undefined","response","name","code","Code","$fault","requestId","headers","extendedRequestId","cfId"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/smithy-client/dist-es/default-error-handler.js"],"sourcesContent":["import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody.code || parsedBody.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,cAAc;AACvD,OAAO,MAAMC,iBAAiB,GAAG,QAAsD;EAAA,IAArD;IAAEC,MAAM;IAAEC,UAAU;IAAEC,aAAa;IAAEC;EAAU,CAAC;EAC9E,MAAMC,SAAS,GAAGC,mBAAmB,CAACL,MAAM,CAAC;EAC7C,MAAMM,UAAU,GAAGF,SAAS,CAACG,cAAc,GAAGH,SAAS,CAACG,cAAc,GAAG,EAAE,GAAGC,SAAS;EACvF,MAAMC,QAAQ,GAAG,IAAIP,aAAa,CAAC;IAC/BQ,IAAI,EAAET,UAAU,CAACU,IAAI,IAAIV,UAAU,CAACW,IAAI,IAAIT,SAAS,IAAIG,UAAU,IAAI,cAAc;IACrFO,MAAM,EAAE,QAAQ;IAChBT;EACJ,CAAC,CAAC;EACF,MAAMN,wBAAwB,CAACW,QAAQ,EAAER,UAAU,CAAC;AACxD,CAAC;AACD,MAAMI,mBAAmB,GAAIL,MAAM,KAAM;EACrCO,cAAc,EAAEP,MAAM,CAACM,UAAU;EACjCQ,SAAS,EAAEd,MAAM,CAACe,OAAO,CAAC,kBAAkB,CAAC,IAAIf,MAAM,CAACe,OAAO,CAAC,mBAAmB,CAAC,IAAIf,MAAM,CAACe,OAAO,CAAC,kBAAkB,CAAC;EAC1HC,iBAAiB,EAAEhB,MAAM,CAACe,OAAO,CAAC,YAAY,CAAC;EAC/CE,IAAI,EAAEjB,MAAM,CAACe,OAAO,CAAC,aAAa;AACtC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}