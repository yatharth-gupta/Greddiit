{"ast":null,"code":"const p = \"required\",\n  q = \"fn\",\n  r = \"argv\",\n  s = \"ref\";\nconst a = \"PartitionResult\",\n  b = \"tree\",\n  c = \"error\",\n  d = \"endpoint\",\n  e = {\n    [p]: false,\n    \"type\": \"String\"\n  },\n  f = {\n    [p]: true,\n    \"default\": false,\n    \"type\": \"Boolean\"\n  },\n  g = {\n    [s]: \"Endpoint\"\n  },\n  h = {\n    [q]: \"booleanEquals\",\n    [r]: [{\n      [s]: \"UseFIPS\"\n    }, true]\n  },\n  i = {\n    [q]: \"booleanEquals\",\n    [r]: [{\n      [s]: \"UseDualStack\"\n    }, true]\n  },\n  j = {},\n  k = {\n    [q]: \"booleanEquals\",\n    [r]: [true, {\n      [q]: \"getAttr\",\n      [r]: [{\n        [s]: a\n      }, \"supportsFIPS\"]\n    }]\n  },\n  l = {\n    [q]: \"booleanEquals\",\n    [r]: [true, {\n      [q]: \"getAttr\",\n      [r]: [{\n        [s]: a\n      }, \"supportsDualStack\"]\n    }]\n  },\n  m = [g],\n  n = [h],\n  o = [i];\nconst _data = {\n  version: \"1.0\",\n  parameters: {\n    Region: e,\n    UseDualStack: f,\n    UseFIPS: f,\n    Endpoint: e\n  },\n  rules: [{\n    conditions: [{\n      [q]: \"aws.partition\",\n      [r]: [{\n        [s]: \"Region\"\n      }],\n      assign: a\n    }],\n    type: b,\n    rules: [{\n      conditions: [{\n        [q]: \"isSet\",\n        [r]: m\n      }, {\n        [q]: \"parseURL\",\n        [r]: m,\n        assign: \"url\"\n      }],\n      type: b,\n      rules: [{\n        conditions: n,\n        error: \"Invalid Configuration: FIPS and custom endpoint are not supported\",\n        type: c\n      }, {\n        type: b,\n        rules: [{\n          conditions: o,\n          error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\",\n          type: c\n        }, {\n          endpoint: {\n            url: g,\n            properties: j,\n            headers: j\n          },\n          type: d\n        }]\n      }]\n    }, {\n      conditions: [h, i],\n      type: b,\n      rules: [{\n        conditions: [k, l],\n        type: b,\n        rules: [{\n          endpoint: {\n            url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n            properties: j,\n            headers: j\n          },\n          type: d\n        }]\n      }, {\n        error: \"FIPS and DualStack are enabled, but this partition does not support one or both\",\n        type: c\n      }]\n    }, {\n      conditions: n,\n      type: b,\n      rules: [{\n        conditions: [k],\n        type: b,\n        rules: [{\n          type: b,\n          rules: [{\n            endpoint: {\n              url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}\",\n              properties: j,\n              headers: j\n            },\n            type: d\n          }]\n        }]\n      }, {\n        error: \"FIPS is enabled but this partition does not support FIPS\",\n        type: c\n      }]\n    }, {\n      conditions: o,\n      type: b,\n      rules: [{\n        conditions: [l],\n        type: b,\n        rules: [{\n          endpoint: {\n            url: \"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}\",\n            properties: j,\n            headers: j\n          },\n          type: d\n        }]\n      }, {\n        error: \"DualStack is enabled but this partition does not support DualStack\",\n        type: c\n      }]\n    }, {\n      endpoint: {\n        url: \"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}\",\n        properties: j,\n        headers: j\n      },\n      type: d\n    }]\n  }]\n};\nexport const ruleSet = _data;","map":{"version":3,"names":["p","q","r","s","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","_data","version","parameters","Region","UseDualStack","UseFIPS","Endpoint","rules","conditions","assign","type","error","endpoint","url","properties","headers","ruleSet"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/client-cognito-identity/dist-es/endpoint/ruleset.js"],"sourcesContent":["const p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexport const ruleSet = _data;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}