{"ast":null,"code":"import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n  const {\n    conditions,\n    rules\n  } = treeRule;\n  const {\n    result,\n    referenceRecord\n  } = evaluateConditions(conditions, options);\n  if (!result) {\n    return;\n  }\n  return evaluateRules(rules, {\n    ...options,\n    referenceRecord: {\n      ...options.referenceRecord,\n      ...referenceRecord\n    }\n  });\n};","map":{"version":3,"names":["evaluateConditions","evaluateRules","evaluateTreeRule","treeRule","options","conditions","rules","result","referenceRecord"],"sources":["/home/yatharth/Desktop/sem_4/DASS/assignment_1/my-app/node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTreeRule.js"],"sourcesContent":["import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,MAAMC,gBAAgB,GAAG,CAACC,QAAQ,EAAEC,OAAO,KAAK;EACnD,MAAM;IAAEC,UAAU;IAAEC;EAAM,CAAC,GAAGH,QAAQ;EACtC,MAAM;IAAEI,MAAM;IAAEC;EAAgB,CAAC,GAAGR,kBAAkB,CAACK,UAAU,EAAED,OAAO,CAAC;EAC3E,IAAI,CAACG,MAAM,EAAE;IACT;EACJ;EACA,OAAON,aAAa,CAACK,KAAK,EAAE;IACxB,GAAGF,OAAO;IACVI,eAAe,EAAE;MAAE,GAAGJ,OAAO,CAACI,eAAe;MAAE,GAAGA;IAAgB;EACtE,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}